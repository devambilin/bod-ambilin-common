// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: proto/agent.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AgentBaseFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int32            `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit      int32            `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Keyword    string           `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	OtherParam *structpb.Struct `protobuf:"bytes,4,opt,name=otherParam,proto3" json:"otherParam,omitempty"`
}

func (x *AgentBaseFilterRequest) Reset() {
	*x = AgentBaseFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentBaseFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentBaseFilterRequest) ProtoMessage() {}

func (x *AgentBaseFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentBaseFilterRequest.ProtoReflect.Descriptor instead.
func (*AgentBaseFilterRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{0}
}

func (x *AgentBaseFilterRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AgentBaseFilterRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AgentBaseFilterRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *AgentBaseFilterRequest) GetOtherParam() *structpb.Struct {
	if x != nil {
		return x.OtherParam
	}
	return nil
}

type AgentBaseFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int32            `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit      int32            `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Keyword    string           `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	OtherParam *structpb.Struct `protobuf:"bytes,4,opt,name=otherParam,proto3" json:"otherParam,omitempty"`
	TotalPage  int32            `protobuf:"varint,5,opt,name=totalPage,proto3" json:"totalPage,omitempty"`
	TotalRows  int32            `protobuf:"varint,6,opt,name=totalRows,proto3" json:"totalRows,omitempty"`
	Rows       *structpb.Struct `protobuf:"bytes,7,opt,name=rows,proto3" json:"rows,omitempty"`
}

func (x *AgentBaseFilterResponse) Reset() {
	*x = AgentBaseFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentBaseFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentBaseFilterResponse) ProtoMessage() {}

func (x *AgentBaseFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentBaseFilterResponse.ProtoReflect.Descriptor instead.
func (*AgentBaseFilterResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{1}
}

func (x *AgentBaseFilterResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AgentBaseFilterResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AgentBaseFilterResponse) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *AgentBaseFilterResponse) GetOtherParam() *structpb.Struct {
	if x != nil {
		return x.OtherParam
	}
	return nil
}

func (x *AgentBaseFilterResponse) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *AgentBaseFilterResponse) GetTotalRows() int32 {
	if x != nil {
		return x.TotalRows
	}
	return 0
}

func (x *AgentBaseFilterResponse) GetRows() *structpb.Struct {
	if x != nil {
		return x.Rows
	}
	return nil
}

type AgentNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	Id               string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	NotificationId   string `protobuf:"bytes,4,opt,name=notificationId,proto3" json:"notificationId,omitempty"`
}

func (x *AgentNotificationRequest) Reset() {
	*x = AgentNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentNotificationRequest) ProtoMessage() {}

func (x *AgentNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentNotificationRequest.ProtoReflect.Descriptor instead.
func (*AgentNotificationRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{2}
}

func (x *AgentNotificationRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AgentNotificationRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *AgentNotificationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentNotificationRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

type AgentBaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    int32            `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message   string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId string           `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	Data      *structpb.Struct `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentBaseResponse) Reset() {
	*x = AgentBaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentBaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentBaseResponse) ProtoMessage() {}

func (x *AgentBaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentBaseResponse.ProtoReflect.Descriptor instead.
func (*AgentBaseResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{3}
}

func (x *AgentBaseResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentBaseResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AgentBaseResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AgentBaseResponse) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentDetailCustomer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string  `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string  `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	AgentId          string  `protobuf:"bytes,3,opt,name=agentId,proto3" json:"agentId,omitempty"`
	NominalSetoran   int64   `protobuf:"varint,4,opt,name=nominalSetoran,proto3" json:"nominalSetoran,omitempty"`
	NasabahLat       float32 `protobuf:"fixed32,5,opt,name=nasabahLat,proto3" json:"nasabahLat,omitempty"`
	NasabahLong      float32 `protobuf:"fixed32,6,opt,name=nasabahLong,proto3" json:"nasabahLong,omitempty"`
}

func (x *AgentDetailCustomer) Reset() {
	*x = AgentDetailCustomer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentDetailCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentDetailCustomer) ProtoMessage() {}

func (x *AgentDetailCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentDetailCustomer.ProtoReflect.Descriptor instead.
func (*AgentDetailCustomer) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{4}
}

func (x *AgentDetailCustomer) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AgentDetailCustomer) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *AgentDetailCustomer) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *AgentDetailCustomer) GetNominalSetoran() int64 {
	if x != nil {
		return x.NominalSetoran
	}
	return 0
}

func (x *AgentDetailCustomer) GetNasabahLat() float32 {
	if x != nil {
		return x.NasabahLat
	}
	return 0
}

func (x *AgentDetailCustomer) GetNasabahLong() float32 {
	if x != nil {
		return x.NasabahLong
	}
	return 0
}

type AgentVehicleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	Id               string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AgentVehicleRequest) Reset() {
	*x = AgentVehicleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentVehicleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentVehicleRequest) ProtoMessage() {}

func (x *AgentVehicleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentVehicleRequest.ProtoReflect.Descriptor instead.
func (*AgentVehicleRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{5}
}

func (x *AgentVehicleRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AgentVehicleRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *AgentVehicleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AgentVehicleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       int32          `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message      string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId    string         `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	DataVehicles []*DataVehicle `protobuf:"bytes,4,rep,name=dataVehicles,proto3" json:"dataVehicles,omitempty"`
}

func (x *AgentVehicleResponse) Reset() {
	*x = AgentVehicleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentVehicleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentVehicleResponse) ProtoMessage() {}

func (x *AgentVehicleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentVehicleResponse.ProtoReflect.Descriptor instead.
func (*AgentVehicleResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{6}
}

func (x *AgentVehicleResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentVehicleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AgentVehicleResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AgentVehicleResponse) GetDataVehicles() []*DataVehicle {
	if x != nil {
		return x.DataVehicles
	}
	return nil
}

type AgentSetupLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string  `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string  `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	Id               string  `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Address          string  `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	AddressDetail    string  `protobuf:"bytes,5,opt,name=addressDetail,proto3" json:"addressDetail,omitempty"`
	Longitude        float32 `protobuf:"fixed32,6,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude         float32 `protobuf:"fixed32,7,opt,name=latitude,proto3" json:"latitude,omitempty"`
}

func (x *AgentSetupLocationRequest) Reset() {
	*x = AgentSetupLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentSetupLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentSetupLocationRequest) ProtoMessage() {}

func (x *AgentSetupLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentSetupLocationRequest.ProtoReflect.Descriptor instead.
func (*AgentSetupLocationRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{7}
}

func (x *AgentSetupLocationRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AgentSetupLocationRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *AgentSetupLocationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentSetupLocationRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AgentSetupLocationRequest) GetAddressDetail() string {
	if x != nil {
		return x.AddressDetail
	}
	return ""
}

func (x *AgentSetupLocationRequest) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *AgentSetupLocationRequest) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

type AgentGetListCustomerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    int32       `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message   string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId string      `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	DataUsers []*DataUser `protobuf:"bytes,4,rep,name=dataUsers,proto3" json:"dataUsers,omitempty"`
}

func (x *AgentGetListCustomerResponse) Reset() {
	*x = AgentGetListCustomerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentGetListCustomerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentGetListCustomerResponse) ProtoMessage() {}

func (x *AgentGetListCustomerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentGetListCustomerResponse.ProtoReflect.Descriptor instead.
func (*AgentGetListCustomerResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{8}
}

func (x *AgentGetListCustomerResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentGetListCustomerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AgentGetListCustomerResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AgentGetListCustomerResponse) GetDataUsers() []*DataUser {
	if x != nil {
		return x.DataUsers
	}
	return nil
}

type AgentGlobalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string                  `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string                  `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	Id               string                  `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Filter           *AgentBaseFilterRequest `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *AgentGlobalRequest) Reset() {
	*x = AgentGlobalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentGlobalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentGlobalRequest) ProtoMessage() {}

func (x *AgentGlobalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentGlobalRequest.ProtoReflect.Descriptor instead.
func (*AgentGlobalRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{9}
}

func (x *AgentGlobalRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AgentGlobalRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *AgentGlobalRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentGlobalRequest) GetFilter() *AgentBaseFilterRequest {
	if x != nil {
		return x.Filter
	}
	return nil
}

type AgentGlobalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    int32                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message   string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId string                  `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	DataAgent *DataAgent              `protobuf:"bytes,4,opt,name=dataAgent,proto3" json:"dataAgent,omitempty"`
	Filter    *AgentBaseFilterRequest `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *AgentGlobalResponse) Reset() {
	*x = AgentGlobalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentGlobalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentGlobalResponse) ProtoMessage() {}

func (x *AgentGlobalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentGlobalResponse.ProtoReflect.Descriptor instead.
func (*AgentGlobalResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{10}
}

func (x *AgentGlobalResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentGlobalResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AgentGlobalResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AgentGlobalResponse) GetDataAgent() *DataAgent {
	if x != nil {
		return x.DataAgent
	}
	return nil
}

func (x *AgentGlobalResponse) GetFilter() *AgentBaseFilterRequest {
	if x != nil {
		return x.Filter
	}
	return nil
}

type AgentDashboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       int32                       `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message      string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId    string                      `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	DataAgent    *DataAgent                  `protobuf:"bytes,4,opt,name=dataAgent,proto3" json:"dataAgent,omitempty"`
	SummaryToday *AgentDashboardSummaryToday `protobuf:"bytes,5,opt,name=summaryToday,proto3" json:"summaryToday,omitempty"`
	OrderProcess *AgentDashboardOrderProcess `protobuf:"bytes,6,opt,name=orderProcess,proto3" json:"orderProcess,omitempty"`
	Notification *AgentDashboardNotification `protobuf:"bytes,7,opt,name=notification,proto3" json:"notification,omitempty"`
}

func (x *AgentDashboardResponse) Reset() {
	*x = AgentDashboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentDashboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentDashboardResponse) ProtoMessage() {}

func (x *AgentDashboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentDashboardResponse.ProtoReflect.Descriptor instead.
func (*AgentDashboardResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{11}
}

func (x *AgentDashboardResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentDashboardResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AgentDashboardResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AgentDashboardResponse) GetDataAgent() *DataAgent {
	if x != nil {
		return x.DataAgent
	}
	return nil
}

func (x *AgentDashboardResponse) GetSummaryToday() *AgentDashboardSummaryToday {
	if x != nil {
		return x.SummaryToday
	}
	return nil
}

func (x *AgentDashboardResponse) GetOrderProcess() *AgentDashboardOrderProcess {
	if x != nil {
		return x.OrderProcess
	}
	return nil
}

func (x *AgentDashboardResponse) GetNotification() *AgentDashboardNotification {
	if x != nil {
		return x.Notification
	}
	return nil
}

type AgentDashboardSummaryToday struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeeDiterima        int64 `protobuf:"varint,1,opt,name=feeDiterima,proto3" json:"feeDiterima,omitempty"`
	LimitPickupCurrent int64 `protobuf:"varint,2,opt,name=limitPickupCurrent,proto3" json:"limitPickupCurrent,omitempty"`
	LimitPickupMax     int64 `protobuf:"varint,3,opt,name=limitPickupMax,proto3" json:"limitPickupMax,omitempty"`
	NominalPickup      int64 `protobuf:"varint,4,opt,name=nominalPickup,proto3" json:"nominalPickup,omitempty"`
	OrderProcess       int64 `protobuf:"varint,5,opt,name=orderProcess,proto3" json:"orderProcess,omitempty"`
	OrderFinished      int64 `protobuf:"varint,6,opt,name=orderFinished,proto3" json:"orderFinished,omitempty"`
}

func (x *AgentDashboardSummaryToday) Reset() {
	*x = AgentDashboardSummaryToday{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentDashboardSummaryToday) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentDashboardSummaryToday) ProtoMessage() {}

func (x *AgentDashboardSummaryToday) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentDashboardSummaryToday.ProtoReflect.Descriptor instead.
func (*AgentDashboardSummaryToday) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{12}
}

func (x *AgentDashboardSummaryToday) GetFeeDiterima() int64 {
	if x != nil {
		return x.FeeDiterima
	}
	return 0
}

func (x *AgentDashboardSummaryToday) GetLimitPickupCurrent() int64 {
	if x != nil {
		return x.LimitPickupCurrent
	}
	return 0
}

func (x *AgentDashboardSummaryToday) GetLimitPickupMax() int64 {
	if x != nil {
		return x.LimitPickupMax
	}
	return 0
}

func (x *AgentDashboardSummaryToday) GetNominalPickup() int64 {
	if x != nil {
		return x.NominalPickup
	}
	return 0
}

func (x *AgentDashboardSummaryToday) GetOrderProcess() int64 {
	if x != nil {
		return x.OrderProcess
	}
	return 0
}

func (x *AgentDashboardSummaryToday) GetOrderFinished() int64 {
	if x != nil {
		return x.OrderFinished
	}
	return 0
}

type AgentDashboardNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IsRead          int32  `protobuf:"varint,2,opt,name=isRead,proto3" json:"isRead,omitempty"`
	Title           string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Message         string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	CreatedTime     int64  `protobuf:"varint,5,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	CreatedTimeUnix int64  `protobuf:"varint,6,opt,name=createdTimeUnix,proto3" json:"createdTimeUnix,omitempty"`
}

func (x *AgentDashboardNotification) Reset() {
	*x = AgentDashboardNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentDashboardNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentDashboardNotification) ProtoMessage() {}

func (x *AgentDashboardNotification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentDashboardNotification.ProtoReflect.Descriptor instead.
func (*AgentDashboardNotification) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{13}
}

func (x *AgentDashboardNotification) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentDashboardNotification) GetIsRead() int32 {
	if x != nil {
		return x.IsRead
	}
	return 0
}

func (x *AgentDashboardNotification) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AgentDashboardNotification) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AgentDashboardNotification) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *AgentDashboardNotification) GetCreatedTimeUnix() int64 {
	if x != nil {
		return x.CreatedTimeUnix
	}
	return 0
}

type AgentDashboardOrderProcess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NasabahTransId      string  `protobuf:"bytes,1,opt,name=nasabahTransId,proto3" json:"nasabahTransId,omitempty"`
	NasabahTimePickup   string  `protobuf:"bytes,2,opt,name=nasabahTimePickup,proto3" json:"nasabahTimePickup,omitempty"`
	NasabahPickupValue  float32 `protobuf:"fixed32,3,opt,name=nasabahPickupValue,proto3" json:"nasabahPickupValue,omitempty"`
	NasabahPhone        string  `protobuf:"bytes,4,opt,name=nasabahPhone,proto3" json:"nasabahPhone,omitempty"`
	NasabahName         string  `protobuf:"bytes,5,opt,name=nasabahName,proto3" json:"nasabahName,omitempty"`
	NasabahLongitude    float32 `protobuf:"fixed32,6,opt,name=nasabahLongitude,proto3" json:"nasabahLongitude,omitempty"`
	NasabahLatitude     float32 `protobuf:"fixed32,7,opt,name=nasabahLatitude,proto3" json:"nasabahLatitude,omitempty"`
	NasabahAddress      string  `protobuf:"bytes,8,opt,name=nasabahAddress,proto3" json:"nasabahAddress,omitempty"`
	NasabahPhotoUrl     string  `protobuf:"bytes,9,opt,name=nasabahPhotoUrl,proto3" json:"nasabahPhotoUrl,omitempty"`
	StatusOrderNasabah  int32   `protobuf:"varint,10,opt,name=statusOrderNasabah,proto3" json:"statusOrderNasabah,omitempty"`
	StatusOrderAgent    int32   `protobuf:"varint,11,opt,name=statusOrderAgent,proto3" json:"statusOrderAgent,omitempty"`
	OrderType           string  `protobuf:"bytes,12,opt,name=orderType,proto3" json:"orderType,omitempty"`
	ExpiredTime         int64   `protobuf:"varint,13,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
	ExpiredSecond       int64   `protobuf:"varint,14,opt,name=expiredSecond,proto3" json:"expiredSecond,omitempty"`
	ExpiredSecondStatic int64   `protobuf:"varint,15,opt,name=expiredSecondStatic,proto3" json:"expiredSecondStatic,omitempty"`
}

func (x *AgentDashboardOrderProcess) Reset() {
	*x = AgentDashboardOrderProcess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentDashboardOrderProcess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentDashboardOrderProcess) ProtoMessage() {}

func (x *AgentDashboardOrderProcess) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentDashboardOrderProcess.ProtoReflect.Descriptor instead.
func (*AgentDashboardOrderProcess) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{14}
}

func (x *AgentDashboardOrderProcess) GetNasabahTransId() string {
	if x != nil {
		return x.NasabahTransId
	}
	return ""
}

func (x *AgentDashboardOrderProcess) GetNasabahTimePickup() string {
	if x != nil {
		return x.NasabahTimePickup
	}
	return ""
}

func (x *AgentDashboardOrderProcess) GetNasabahPickupValue() float32 {
	if x != nil {
		return x.NasabahPickupValue
	}
	return 0
}

func (x *AgentDashboardOrderProcess) GetNasabahPhone() string {
	if x != nil {
		return x.NasabahPhone
	}
	return ""
}

func (x *AgentDashboardOrderProcess) GetNasabahName() string {
	if x != nil {
		return x.NasabahName
	}
	return ""
}

func (x *AgentDashboardOrderProcess) GetNasabahLongitude() float32 {
	if x != nil {
		return x.NasabahLongitude
	}
	return 0
}

func (x *AgentDashboardOrderProcess) GetNasabahLatitude() float32 {
	if x != nil {
		return x.NasabahLatitude
	}
	return 0
}

func (x *AgentDashboardOrderProcess) GetNasabahAddress() string {
	if x != nil {
		return x.NasabahAddress
	}
	return ""
}

func (x *AgentDashboardOrderProcess) GetNasabahPhotoUrl() string {
	if x != nil {
		return x.NasabahPhotoUrl
	}
	return ""
}

func (x *AgentDashboardOrderProcess) GetStatusOrderNasabah() int32 {
	if x != nil {
		return x.StatusOrderNasabah
	}
	return 0
}

func (x *AgentDashboardOrderProcess) GetStatusOrderAgent() int32 {
	if x != nil {
		return x.StatusOrderAgent
	}
	return 0
}

func (x *AgentDashboardOrderProcess) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *AgentDashboardOrderProcess) GetExpiredTime() int64 {
	if x != nil {
		return x.ExpiredTime
	}
	return 0
}

func (x *AgentDashboardOrderProcess) GetExpiredSecond() int64 {
	if x != nil {
		return x.ExpiredSecond
	}
	return 0
}

func (x *AgentDashboardOrderProcess) GetExpiredSecondStatic() int64 {
	if x != nil {
		return x.ExpiredSecondStatic
	}
	return 0
}

type AgentHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        int32   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId     string  `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	TransactionId string  `protobuf:"bytes,5,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	Date          string  `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
	Detail        string  `protobuf:"bytes,7,opt,name=detail,proto3" json:"detail,omitempty"`
	Nominal       float32 `protobuf:"fixed32,8,opt,name=nominal,proto3" json:"nominal,omitempty"`
	StatusAgent   int32   `protobuf:"varint,9,opt,name=statusAgent,proto3" json:"statusAgent,omitempty"`
}

func (x *AgentHistoryResponse) Reset() {
	*x = AgentHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentHistoryResponse) ProtoMessage() {}

func (x *AgentHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentHistoryResponse.ProtoReflect.Descriptor instead.
func (*AgentHistoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{15}
}

func (x *AgentHistoryResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentHistoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AgentHistoryResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AgentHistoryResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *AgentHistoryResponse) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *AgentHistoryResponse) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *AgentHistoryResponse) GetNominal() float32 {
	if x != nil {
		return x.Nominal
	}
	return 0
}

func (x *AgentHistoryResponse) GetStatusAgent() int32 {
	if x != nil {
		return x.StatusAgent
	}
	return 0
}

type AgentNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           int32                       `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message          string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId        string                      `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	DataNotification *AgentDashboardNotification `protobuf:"bytes,5,opt,name=dataNotification,proto3" json:"dataNotification,omitempty"`
}

func (x *AgentNotificationResponse) Reset() {
	*x = AgentNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentNotificationResponse) ProtoMessage() {}

func (x *AgentNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentNotificationResponse.ProtoReflect.Descriptor instead.
func (*AgentNotificationResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{16}
}

func (x *AgentNotificationResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentNotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AgentNotificationResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AgentNotificationResponse) GetDataNotification() *AgentDashboardNotification {
	if x != nil {
		return x.DataNotification
	}
	return nil
}

type AgentPhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	Id               string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	PhotoUrl         string `protobuf:"bytes,4,opt,name=photoUrl,proto3" json:"photoUrl,omitempty"`
}

func (x *AgentPhotoRequest) Reset() {
	*x = AgentPhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentPhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentPhotoRequest) ProtoMessage() {}

func (x *AgentPhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentPhotoRequest.ProtoReflect.Descriptor instead.
func (*AgentPhotoRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{17}
}

func (x *AgentPhotoRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AgentPhotoRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *AgentPhotoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentPhotoRequest) GetPhotoUrl() string {
	if x != nil {
		return x.PhotoUrl
	}
	return ""
}

type AgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string     `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string     `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	Agent            *DataAgent `protobuf:"bytes,3,opt,name=agent,proto3" json:"agent,omitempty"`
}

func (x *AgentRequest) Reset() {
	*x = AgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentRequest) ProtoMessage() {}

func (x *AgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentRequest.ProtoReflect.Descriptor instead.
func (*AgentRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{18}
}

func (x *AgentRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AgentRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *AgentRequest) GetAgent() *DataAgent {
	if x != nil {
		return x.Agent
	}
	return nil
}

type AgentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           int32        `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message          string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId        string       `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string       `protobuf:"bytes,4,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	DataAgent        *DataAgent   `protobuf:"bytes,5,opt,name=dataAgent,proto3" json:"dataAgent,omitempty"`
	ListAgent        []*DataAgent `protobuf:"bytes,6,rep,name=listAgent,proto3" json:"listAgent,omitempty"`
}

func (x *AgentResponse) Reset() {
	*x = AgentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentResponse) ProtoMessage() {}

func (x *AgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentResponse.ProtoReflect.Descriptor instead.
func (*AgentResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{19}
}

func (x *AgentResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AgentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AgentResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AgentResponse) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *AgentResponse) GetDataAgent() *DataAgent {
	if x != nil {
		return x.DataAgent
	}
	return nil
}

func (x *AgentResponse) GetListAgent() []*DataAgent {
	if x != nil {
		return x.ListAgent
	}
	return nil
}

type DataAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created               int64   `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Updated               int64   `protobuf:"varint,2,opt,name=updated,proto3" json:"updated,omitempty"`
	Removed               int64   `protobuf:"varint,3,opt,name=removed,proto3" json:"removed,omitempty"`
	CreatedBy             string  `protobuf:"bytes,4,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	UpdatedBy             string  `protobuf:"bytes,5,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	Id                    string  `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
	Ktp                   string  `protobuf:"bytes,7,opt,name=ktp,proto3" json:"ktp,omitempty"`
	FullName              string  `protobuf:"bytes,8,opt,name=fullName,proto3" json:"fullName,omitempty"`
	Religion              string  `protobuf:"bytes,9,opt,name=religion,proto3" json:"religion,omitempty"`
	Gender                string  `protobuf:"bytes,10,opt,name=gender,proto3" json:"gender,omitempty"`
	DateOfBirth           string  `protobuf:"bytes,11,opt,name=dateOfBirth,proto3" json:"dateOfBirth,omitempty"`
	PlaceOfBirth          string  `protobuf:"bytes,12,opt,name=placeOfBirth,proto3" json:"placeOfBirth,omitempty"`
	Address               string  `protobuf:"bytes,13,opt,name=address,proto3" json:"address,omitempty"`
	ZipCode               int32   `protobuf:"varint,14,opt,name=zipCode,proto3" json:"zipCode,omitempty"`
	AddressDomicile       string  `protobuf:"bytes,15,opt,name=addressDomicile,proto3" json:"addressDomicile,omitempty"`
	ZipCodeDomicile       int32   `protobuf:"varint,16,opt,name=zipCodeDomicile,proto3" json:"zipCodeDomicile,omitempty"`
	Phone                 string  `protobuf:"bytes,17,opt,name=phone,proto3" json:"phone,omitempty"`
	Email                 string  `protobuf:"bytes,18,opt,name=email,proto3" json:"email,omitempty"`
	Longitude             float32 `protobuf:"fixed32,19,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude              float32 `protobuf:"fixed32,20,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Image                 string  `protobuf:"bytes,21,opt,name=image,proto3" json:"image,omitempty"`
	Notification          bool    `protobuf:"varint,22,opt,name=notification,proto3" json:"notification,omitempty"`
	IsOnline              bool    `protobuf:"varint,23,opt,name=isOnline,proto3" json:"isOnline,omitempty"`
	CostInstant           string  `protobuf:"bytes,24,opt,name=costInstant,proto3" json:"costInstant,omitempty"`
	Status                int32   `protobuf:"varint,25,opt,name=status,proto3" json:"status,omitempty"`
	CostLater             string  `protobuf:"bytes,26,opt,name=costLater,proto3" json:"costLater,omitempty"`
	LimitPickup           string  `protobuf:"bytes,27,opt,name=limitPickup,proto3" json:"limitPickup,omitempty"`
	Mid                   string  `protobuf:"bytes,28,opt,name=mid,proto3" json:"mid,omitempty"`
	PhotoUrl              string  `protobuf:"bytes,29,opt,name=photoUrl,proto3" json:"photoUrl,omitempty"`
	AccessId              string  `protobuf:"bytes,30,opt,name=accessId,proto3" json:"accessId,omitempty"`
	KancaId               int32   `protobuf:"varint,31,opt,name=kancaId,proto3" json:"kancaId,omitempty"`
	PabId                 int32   `protobuf:"varint,32,opt,name=pabId,proto3" json:"pabId,omitempty"`
	FirstLogin            bool    `protobuf:"varint,33,opt,name=firstLogin,proto3" json:"firstLogin,omitempty"`
	LastUpdateDataBrilink int64   `protobuf:"varint,34,opt,name=lastUpdateDataBrilink,proto3" json:"lastUpdateDataBrilink,omitempty"`
	BranchCode            string  `protobuf:"bytes,35,opt,name=branchCode,proto3" json:"branchCode,omitempty"`
	BranchName            string  `protobuf:"bytes,36,opt,name=branchName,proto3" json:"branchName,omitempty"`
	RegionCode            string  `protobuf:"bytes,37,opt,name=regionCode,proto3" json:"regionCode,omitempty"`
	RegionName            string  `protobuf:"bytes,38,opt,name=regionName,proto3" json:"regionName,omitempty"`
	MerchantCode          string  `protobuf:"bytes,39,opt,name=merchantCode,proto3" json:"merchantCode,omitempty"`
	VehicleCode           string  `protobuf:"bytes,40,opt,name=vehicleCode,proto3" json:"vehicleCode,omitempty"`
	NumberPolice          string  `protobuf:"bytes,41,opt,name=numberPolice,proto3" json:"numberPolice,omitempty"`
	SetupLocation         bool    `protobuf:"varint,42,opt,name=setupLocation,proto3" json:"setupLocation,omitempty"`
}

func (x *DataAgent) Reset() {
	*x = DataAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataAgent) ProtoMessage() {}

func (x *DataAgent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataAgent.ProtoReflect.Descriptor instead.
func (*DataAgent) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{20}
}

func (x *DataAgent) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *DataAgent) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *DataAgent) GetRemoved() int64 {
	if x != nil {
		return x.Removed
	}
	return 0
}

func (x *DataAgent) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *DataAgent) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *DataAgent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DataAgent) GetKtp() string {
	if x != nil {
		return x.Ktp
	}
	return ""
}

func (x *DataAgent) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *DataAgent) GetReligion() string {
	if x != nil {
		return x.Religion
	}
	return ""
}

func (x *DataAgent) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *DataAgent) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *DataAgent) GetPlaceOfBirth() string {
	if x != nil {
		return x.PlaceOfBirth
	}
	return ""
}

func (x *DataAgent) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DataAgent) GetZipCode() int32 {
	if x != nil {
		return x.ZipCode
	}
	return 0
}

func (x *DataAgent) GetAddressDomicile() string {
	if x != nil {
		return x.AddressDomicile
	}
	return ""
}

func (x *DataAgent) GetZipCodeDomicile() int32 {
	if x != nil {
		return x.ZipCodeDomicile
	}
	return 0
}

func (x *DataAgent) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *DataAgent) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DataAgent) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *DataAgent) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *DataAgent) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *DataAgent) GetNotification() bool {
	if x != nil {
		return x.Notification
	}
	return false
}

func (x *DataAgent) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *DataAgent) GetCostInstant() string {
	if x != nil {
		return x.CostInstant
	}
	return ""
}

func (x *DataAgent) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DataAgent) GetCostLater() string {
	if x != nil {
		return x.CostLater
	}
	return ""
}

func (x *DataAgent) GetLimitPickup() string {
	if x != nil {
		return x.LimitPickup
	}
	return ""
}

func (x *DataAgent) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *DataAgent) GetPhotoUrl() string {
	if x != nil {
		return x.PhotoUrl
	}
	return ""
}

func (x *DataAgent) GetAccessId() string {
	if x != nil {
		return x.AccessId
	}
	return ""
}

func (x *DataAgent) GetKancaId() int32 {
	if x != nil {
		return x.KancaId
	}
	return 0
}

func (x *DataAgent) GetPabId() int32 {
	if x != nil {
		return x.PabId
	}
	return 0
}

func (x *DataAgent) GetFirstLogin() bool {
	if x != nil {
		return x.FirstLogin
	}
	return false
}

func (x *DataAgent) GetLastUpdateDataBrilink() int64 {
	if x != nil {
		return x.LastUpdateDataBrilink
	}
	return 0
}

func (x *DataAgent) GetBranchCode() string {
	if x != nil {
		return x.BranchCode
	}
	return ""
}

func (x *DataAgent) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

func (x *DataAgent) GetRegionCode() string {
	if x != nil {
		return x.RegionCode
	}
	return ""
}

func (x *DataAgent) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

func (x *DataAgent) GetMerchantCode() string {
	if x != nil {
		return x.MerchantCode
	}
	return ""
}

func (x *DataAgent) GetVehicleCode() string {
	if x != nil {
		return x.VehicleCode
	}
	return ""
}

func (x *DataAgent) GetNumberPolice() string {
	if x != nil {
		return x.NumberPolice
	}
	return ""
}

func (x *DataAgent) GetSetupLocation() bool {
	if x != nil {
		return x.SetupLocation
	}
	return false
}

type DataVehicle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VehicleCode string `protobuf:"bytes,1,opt,name=vehicleCode,proto3" json:"vehicleCode,omitempty"`
	VehicleName string `protobuf:"bytes,2,opt,name=vehicleName,proto3" json:"vehicleName,omitempty"`
}

func (x *DataVehicle) Reset() {
	*x = DataVehicle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_agent_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataVehicle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataVehicle) ProtoMessage() {}

func (x *DataVehicle) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataVehicle.ProtoReflect.Descriptor instead.
func (*DataVehicle) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{21}
}

func (x *DataVehicle) GetVehicleCode() string {
	if x != nil {
		return x.VehicleCode
	}
	return ""
}

func (x *DataVehicle) GetVehicleName() string {
	if x != nil {
		return x.VehicleName
	}
	return ""
}

var File_proto_agent_proto protoreflect.FileDescriptor

var file_proto_agent_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x95, 0x01, 0x0a, 0x16, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x22, 0xff, 0x01, 0x0a, 0x17, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x0a, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x6f, 0x77, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04,
	0x72, 0x6f, 0x77, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x18, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x11, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe3, 0x01, 0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x74,
	0x6f, 0x72, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x6f, 0x6d, 0x69,
	0x6e, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x6f, 0x72, 0x61, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61,
	0x73, 0x61, 0x62, 0x61, 0x68, 0x4c, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a,
	0x6e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x4c, 0x61, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61,
	0x73, 0x61, 0x62, 0x61, 0x68, 0x4c, 0x6f, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0b, 0x6e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x4c, 0x6f, 0x6e, 0x67, 0x22, 0x6f, 0x0a, 0x13,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9e, 0x01,
	0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x22, 0xef,
	0x01, 0x0a, 0x19, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x75, 0x70, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x22, 0x9d, 0x01, 0x0a, 0x1c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x2d, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x22, 0xa5, 0x01, 0x0a, 0x12, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x35, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42,
	0x61, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xcc, 0x01, 0x0a, 0x13, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x2e, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x12, 0x35, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x61,
	0x73, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xed, 0x02, 0x0a, 0x16, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0c, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x54, 0x6f, 0x64,
	0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x52, 0x0c, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x12, 0x45, 0x0a, 0x0c, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x45, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x86, 0x02, 0x0a, 0x1a, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x65, 0x65, 0x44, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x65, 0x65,
	0x44, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6d, 0x61, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75,
	0x70, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x4d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x4d, 0x61, 0x78,
	0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x69, 0x63, 0x6b, 0x75,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c,
	0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x22, 0xc0, 0x01, 0x0a, 0x1a, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x55,
	0x6e, 0x69, 0x78, 0x22, 0x84, 0x05, 0x0a, 0x1a, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x61, 0x73, 0x61,
	0x62, 0x61, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x61,
	0x73, 0x61, 0x62, 0x61, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x54, 0x69,
	0x6d, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x2e, 0x0a, 0x12, 0x6e, 0x61, 0x73, 0x61,
	0x62, 0x61, 0x68, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x6e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x50, 0x69, 0x63,
	0x6b, 0x75, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x61, 0x73, 0x61,
	0x62, 0x61, 0x68, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x6e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x6e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x6e, 0x61, 0x73, 0x61, 0x62, 0x61,
	0x68, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6e, 0x61,
	0x73, 0x61, 0x62, 0x61, 0x68, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0f, 0x6e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x4c, 0x61, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x61,
	0x73, 0x61, 0x62, 0x61, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x0f,
	0x6e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x12, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e,
	0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x22, 0xf4, 0x01, 0x0a, 0x14, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x22, 0xba, 0x01, 0x0a, 0x19, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x4d, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x64, 0x61,
	0x74, 0x61, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x89,
	0x01, 0x0a, 0x11, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x22, 0x80, 0x01, 0x0a, 0x0c, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x22, 0xeb, 0x01,
	0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x6c,
	0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x22, 0xeb, 0x09, 0x0a, 0x09,
	0x44, 0x61, 0x74, 0x61, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x74, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x74, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42,
	0x69, 0x72, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x6f, 0x6d, 0x69, 0x63, 0x69,
	0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x44, 0x6f, 0x6d, 0x69, 0x63, 0x69, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x7a, 0x69, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x44, 0x6f, 0x6d, 0x69, 0x63, 0x69, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x44, 0x6f, 0x6d, 0x69, 0x63,
	0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x73,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x72, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x73, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x61, 0x6e, 0x63, 0x61, 0x49, 0x64, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6b, 0x61, 0x6e, 0x63, 0x61, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x62, 0x49, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61,
	0x62, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x18, 0x21, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x72, 0x69, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x42, 0x72, 0x69, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x65, 0x18,
	0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x74, 0x75, 0x70, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x65, 0x74, 0x75,
	0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x51, 0x0a, 0x0b, 0x44, 0x61, 0x74,
	0x61, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x99, 0x0d, 0x0a,
	0x0c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a,
	0x0b, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x15, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x17, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x54, 0x0a, 0x15, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x10, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x10, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x15,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50,
	0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0f,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x44, 0x0a, 0x11, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a,
	0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x12, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x75, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x75, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4a, 0x0a, 0x10, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x12, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x13, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x1a, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x76, 0x61, 0x6d, 0x62, 0x69, 0x6c, 0x69,
	0x6e, 0x2f, 0x62, 0x6f, 0x64, 0x2d, 0x61, 0x6d, 0x62, 0x69, 0x6c, 0x69, 0x6e, 0x2d, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_agent_proto_rawDescOnce sync.Once
	file_proto_agent_proto_rawDescData = file_proto_agent_proto_rawDesc
)

func file_proto_agent_proto_rawDescGZIP() []byte {
	file_proto_agent_proto_rawDescOnce.Do(func() {
		file_proto_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_agent_proto_rawDescData)
	})
	return file_proto_agent_proto_rawDescData
}

var file_proto_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_proto_agent_proto_goTypes = []interface{}{
	(*AgentBaseFilterRequest)(nil),       // 0: proto.AgentBaseFilterRequest
	(*AgentBaseFilterResponse)(nil),      // 1: proto.AgentBaseFilterResponse
	(*AgentNotificationRequest)(nil),     // 2: proto.AgentNotificationRequest
	(*AgentBaseResponse)(nil),            // 3: proto.AgentBaseResponse
	(*AgentDetailCustomer)(nil),          // 4: proto.AgentDetailCustomer
	(*AgentVehicleRequest)(nil),          // 5: proto.AgentVehicleRequest
	(*AgentVehicleResponse)(nil),         // 6: proto.AgentVehicleResponse
	(*AgentSetupLocationRequest)(nil),    // 7: proto.AgentSetupLocationRequest
	(*AgentGetListCustomerResponse)(nil), // 8: proto.AgentGetListCustomerResponse
	(*AgentGlobalRequest)(nil),           // 9: proto.AgentGlobalRequest
	(*AgentGlobalResponse)(nil),          // 10: proto.AgentGlobalResponse
	(*AgentDashboardResponse)(nil),       // 11: proto.AgentDashboardResponse
	(*AgentDashboardSummaryToday)(nil),   // 12: proto.AgentDashboardSummaryToday
	(*AgentDashboardNotification)(nil),   // 13: proto.AgentDashboardNotification
	(*AgentDashboardOrderProcess)(nil),   // 14: proto.AgentDashboardOrderProcess
	(*AgentHistoryResponse)(nil),         // 15: proto.AgentHistoryResponse
	(*AgentNotificationResponse)(nil),    // 16: proto.AgentNotificationResponse
	(*AgentPhotoRequest)(nil),            // 17: proto.AgentPhotoRequest
	(*AgentRequest)(nil),                 // 18: proto.AgentRequest
	(*AgentResponse)(nil),                // 19: proto.AgentResponse
	(*DataAgent)(nil),                    // 20: proto.DataAgent
	(*DataVehicle)(nil),                  // 21: proto.DataVehicle
	(*structpb.Struct)(nil),              // 22: google.protobuf.Struct
	(*DataUser)(nil),                     // 23: proto.DataUser
}
var file_proto_agent_proto_depIdxs = []int32{
	22, // 0: proto.AgentBaseFilterRequest.otherParam:type_name -> google.protobuf.Struct
	22, // 1: proto.AgentBaseFilterResponse.otherParam:type_name -> google.protobuf.Struct
	22, // 2: proto.AgentBaseFilterResponse.rows:type_name -> google.protobuf.Struct
	22, // 3: proto.AgentBaseResponse.data:type_name -> google.protobuf.Struct
	21, // 4: proto.AgentVehicleResponse.dataVehicles:type_name -> proto.DataVehicle
	23, // 5: proto.AgentGetListCustomerResponse.dataUsers:type_name -> proto.DataUser
	0,  // 6: proto.AgentGlobalRequest.filter:type_name -> proto.AgentBaseFilterRequest
	20, // 7: proto.AgentGlobalResponse.dataAgent:type_name -> proto.DataAgent
	0,  // 8: proto.AgentGlobalResponse.filter:type_name -> proto.AgentBaseFilterRequest
	20, // 9: proto.AgentDashboardResponse.dataAgent:type_name -> proto.DataAgent
	12, // 10: proto.AgentDashboardResponse.summaryToday:type_name -> proto.AgentDashboardSummaryToday
	14, // 11: proto.AgentDashboardResponse.orderProcess:type_name -> proto.AgentDashboardOrderProcess
	13, // 12: proto.AgentDashboardResponse.notification:type_name -> proto.AgentDashboardNotification
	13, // 13: proto.AgentNotificationResponse.dataNotification:type_name -> proto.AgentDashboardNotification
	20, // 14: proto.AgentRequest.agent:type_name -> proto.DataAgent
	20, // 15: proto.AgentResponse.dataAgent:type_name -> proto.DataAgent
	20, // 16: proto.AgentResponse.listAgent:type_name -> proto.DataAgent
	18, // 17: proto.AgentService.GetAgents:input_type -> proto.AgentRequest
	18, // 18: proto.AgentService.GetAgent:input_type -> proto.AgentRequest
	18, // 19: proto.AgentService.CreateAgent:input_type -> proto.AgentRequest
	18, // 20: proto.AgentService.UpdateAgent:input_type -> proto.AgentRequest
	18, // 21: proto.AgentService.DeleteAgent:input_type -> proto.AgentRequest
	9,  // 22: proto.AgentService.AgentDashboard:input_type -> proto.AgentGlobalRequest
	9,  // 23: proto.AgentService.AgentDetail:input_type -> proto.AgentGlobalRequest
	9,  // 24: proto.AgentService.AgentHistory:input_type -> proto.AgentGlobalRequest
	9,  // 25: proto.AgentService.AgentListNotification:input_type -> proto.AgentGlobalRequest
	2,  // 26: proto.AgentService.AgentDeleteNotification:input_type -> proto.AgentNotificationRequest
	2,  // 27: proto.AgentService.AgentReadNotification:input_type -> proto.AgentNotificationRequest
	17, // 28: proto.AgentService.AgentUploadPhoto:input_type -> proto.AgentPhotoRequest
	17, // 29: proto.AgentService.AgentDeletePhoto:input_type -> proto.AgentPhotoRequest
	9,  // 30: proto.AgentService.AgentCheckLimitPickup:input_type -> proto.AgentGlobalRequest
	18, // 31: proto.AgentService.AgentUpdateData:input_type -> proto.AgentRequest
	18, // 32: proto.AgentService.AgentChangeStatus:input_type -> proto.AgentRequest
	18, // 33: proto.AgentService.AgentSetLimitPickup:input_type -> proto.AgentRequest
	9,  // 34: proto.AgentService.AgentGetListCustomer:input_type -> proto.AgentGlobalRequest
	9,  // 35: proto.AgentService.AgentGetLimitPickup:input_type -> proto.AgentGlobalRequest
	7,  // 36: proto.AgentService.AgentSetupLocation:input_type -> proto.AgentSetupLocationRequest
	5,  // 37: proto.AgentService.AgentListVehicle:input_type -> proto.AgentVehicleRequest
	5,  // 38: proto.AgentService.AgentSubmitVehicle:input_type -> proto.AgentVehicleRequest
	4,  // 39: proto.AgentService.CustomerDetailAgent:input_type -> proto.AgentDetailCustomer
	19, // 40: proto.AgentService.GetAgents:output_type -> proto.AgentResponse
	19, // 41: proto.AgentService.GetAgent:output_type -> proto.AgentResponse
	19, // 42: proto.AgentService.CreateAgent:output_type -> proto.AgentResponse
	19, // 43: proto.AgentService.UpdateAgent:output_type -> proto.AgentResponse
	19, // 44: proto.AgentService.DeleteAgent:output_type -> proto.AgentResponse
	3,  // 45: proto.AgentService.AgentDashboard:output_type -> proto.AgentBaseResponse
	3,  // 46: proto.AgentService.AgentDetail:output_type -> proto.AgentBaseResponse
	3,  // 47: proto.AgentService.AgentHistory:output_type -> proto.AgentBaseResponse
	3,  // 48: proto.AgentService.AgentListNotification:output_type -> proto.AgentBaseResponse
	3,  // 49: proto.AgentService.AgentDeleteNotification:output_type -> proto.AgentBaseResponse
	3,  // 50: proto.AgentService.AgentReadNotification:output_type -> proto.AgentBaseResponse
	3,  // 51: proto.AgentService.AgentUploadPhoto:output_type -> proto.AgentBaseResponse
	3,  // 52: proto.AgentService.AgentDeletePhoto:output_type -> proto.AgentBaseResponse
	3,  // 53: proto.AgentService.AgentCheckLimitPickup:output_type -> proto.AgentBaseResponse
	3,  // 54: proto.AgentService.AgentUpdateData:output_type -> proto.AgentBaseResponse
	3,  // 55: proto.AgentService.AgentChangeStatus:output_type -> proto.AgentBaseResponse
	3,  // 56: proto.AgentService.AgentSetLimitPickup:output_type -> proto.AgentBaseResponse
	3,  // 57: proto.AgentService.AgentGetListCustomer:output_type -> proto.AgentBaseResponse
	3,  // 58: proto.AgentService.AgentGetLimitPickup:output_type -> proto.AgentBaseResponse
	3,  // 59: proto.AgentService.AgentSetupLocation:output_type -> proto.AgentBaseResponse
	3,  // 60: proto.AgentService.AgentListVehicle:output_type -> proto.AgentBaseResponse
	3,  // 61: proto.AgentService.AgentSubmitVehicle:output_type -> proto.AgentBaseResponse
	3,  // 62: proto.AgentService.CustomerDetailAgent:output_type -> proto.AgentBaseResponse
	40, // [40:63] is the sub-list for method output_type
	17, // [17:40] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_proto_agent_proto_init() }
func file_proto_agent_proto_init() {
	if File_proto_agent_proto != nil {
		return
	}
	file_proto_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_agent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentBaseFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentBaseFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentBaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentDetailCustomer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentVehicleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentVehicleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentSetupLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentGetListCustomerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentGlobalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentGlobalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentDashboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentDashboardSummaryToday); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentDashboardNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentDashboardOrderProcess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentPhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_agent_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataVehicle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_agent_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_agent_proto_goTypes,
		DependencyIndexes: file_proto_agent_proto_depIdxs,
		MessageInfos:      file_proto_agent_proto_msgTypes,
	}.Build()
	File_proto_agent_proto = out.File
	file_proto_agent_proto_rawDesc = nil
	file_proto_agent_proto_goTypes = nil
	file_proto_agent_proto_depIdxs = nil
}
