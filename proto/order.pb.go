// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/order.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OrderRequest struct {
	RequestId            string    `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService     string    `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	User                 *DataUser `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *OrderRequest) Reset()         { *m = OrderRequest{} }
func (m *OrderRequest) String() string { return proto.CompactTextString(m) }
func (*OrderRequest) ProtoMessage()    {}
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65b0626cc3aada8, []int{0}
}

func (m *OrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderRequest.Unmarshal(m, b)
}
func (m *OrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderRequest.Marshal(b, m, deterministic)
}
func (m *OrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderRequest.Merge(m, src)
}
func (m *OrderRequest) XXX_Size() int {
	return xxx_messageInfo_OrderRequest.Size(m)
}
func (m *OrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderRequest proto.InternalMessageInfo

func (m *OrderRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *OrderRequest) GetRequestByService() string {
	if m != nil {
		return m.RequestByService
	}
	return ""
}

func (m *OrderRequest) GetUser() *DataUser {
	if m != nil {
		return m.User
	}
	return nil
}

type OrderResponse struct {
	Status               int32        `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message              string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId            string       `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService     string       `protobuf:"bytes,4,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	DataOrder            *DataOrder   `protobuf:"bytes,5,opt,name=dataOrder,proto3" json:"dataOrder,omitempty"`
	ListOrder            []*DataOrder `protobuf:"bytes,6,rep,name=listOrder,proto3" json:"listOrder,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *OrderResponse) Reset()         { *m = OrderResponse{} }
func (m *OrderResponse) String() string { return proto.CompactTextString(m) }
func (*OrderResponse) ProtoMessage()    {}
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65b0626cc3aada8, []int{1}
}

func (m *OrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderResponse.Unmarshal(m, b)
}
func (m *OrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderResponse.Marshal(b, m, deterministic)
}
func (m *OrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderResponse.Merge(m, src)
}
func (m *OrderResponse) XXX_Size() int {
	return xxx_messageInfo_OrderResponse.Size(m)
}
func (m *OrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderResponse proto.InternalMessageInfo

func (m *OrderResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *OrderResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *OrderResponse) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *OrderResponse) GetRequestByService() string {
	if m != nil {
		return m.RequestByService
	}
	return ""
}

func (m *OrderResponse) GetDataOrder() *DataOrder {
	if m != nil {
		return m.DataOrder
	}
	return nil
}

func (m *OrderResponse) GetListOrder() []*DataOrder {
	if m != nil {
		return m.ListOrder
	}
	return nil
}

type DataOrder struct {
	Created              int64    `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Updated              int64    `protobuf:"varint,2,opt,name=updated,proto3" json:"updated,omitempty"`
	Removed              int64    `protobuf:"varint,3,opt,name=removed,proto3" json:"removed,omitempty"`
	CreatedBy            string   `protobuf:"bytes,4,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	UpdatedBy            string   `protobuf:"bytes,5,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	Id                   string   `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
	UserId               string   `protobuf:"bytes,7,opt,name=userId,proto3" json:"userId,omitempty"`
	AgentId              string   `protobuf:"bytes,8,opt,name=agentId,proto3" json:"agentId,omitempty"`
	DepositAmount        float32  `protobuf:"fixed32,9,opt,name=depositAmount,proto3" json:"depositAmount,omitempty"`
	ShippingFee          float32  `protobuf:"fixed32,10,opt,name=shippingFee,proto3" json:"shippingFee,omitempty"`
	ShippingMethod       int32    `protobuf:"varint,11,opt,name=shippingMethod,proto3" json:"shippingMethod,omitempty"`
	OrderStatusCustomer  int32    `protobuf:"varint,12,opt,name=orderStatusCustomer,proto3" json:"orderStatusCustomer,omitempty"`
	OrderType            string   `protobuf:"bytes,13,opt,name=orderType,proto3" json:"orderType,omitempty"`
	ProgressPickup       int32    `protobuf:"varint,14,opt,name=progressPickup,proto3" json:"progressPickup,omitempty"`
	OrderLater           string   `protobuf:"bytes,15,opt,name=orderLater,proto3" json:"orderLater,omitempty"`
	EstimatedArrival     string   `protobuf:"bytes,16,opt,name=estimatedArrival,proto3" json:"estimatedArrival,omitempty"`
	EstimatedPickup      string   `protobuf:"bytes,17,opt,name=estimatedPickup,proto3" json:"estimatedPickup,omitempty"`
	CustomerPlace        string   `protobuf:"bytes,18,opt,name=customerPlace,proto3" json:"customerPlace,omitempty"`
	CustomerAddress      string   `protobuf:"bytes,19,opt,name=customerAddress,proto3" json:"customerAddress,omitempty"`
	CustomerLatitude     float32  `protobuf:"fixed32,20,opt,name=customerLatitude,proto3" json:"customerLatitude,omitempty"`
	CustomerLongitude    float32  `protobuf:"fixed32,21,opt,name=customerLongitude,proto3" json:"customerLongitude,omitempty"`
	AgentLatitude        float32  `protobuf:"fixed32,22,opt,name=agentLatitude,proto3" json:"agentLatitude,omitempty"`
	AgentLongitude       float32  `protobuf:"fixed32,23,opt,name=agentLongitude,proto3" json:"agentLongitude,omitempty"`
	OrderStatusAgent     int32    `protobuf:"varint,24,opt,name=orderStatusAgent,proto3" json:"orderStatusAgent,omitempty"`
	CostOrder            float32  `protobuf:"fixed32,25,opt,name=costOrder,proto3" json:"costOrder,omitempty"`
	AmountStatus         bool     `protobuf:"varint,26,opt,name=amountStatus,proto3" json:"amountStatus,omitempty"`
	ExpiredTime          int64    `protobuf:"varint,27,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
	CompletedTime        int64    `protobuf:"varint,28,opt,name=completedTime,proto3" json:"completedTime,omitempty"`
	Distance             float32  `protobuf:"fixed32,29,opt,name=distance,proto3" json:"distance,omitempty"`
	ConfirmButton        bool     `protobuf:"varint,30,opt,name=confirmButton,proto3" json:"confirmButton,omitempty"`
	ConfirmButtonAgent   bool     `protobuf:"varint,31,opt,name=confirmButtonAgent,proto3" json:"confirmButtonAgent,omitempty"`
	AmountStatusInvalid  bool     `protobuf:"varint,32,opt,name=amountStatusInvalid,proto3" json:"amountStatusInvalid,omitempty"`
	OrderCode            string   `protobuf:"bytes,33,opt,name=orderCode,proto3" json:"orderCode,omitempty"`
	IsCountdown          bool     `protobuf:"varint,34,opt,name=isCountdown,proto3" json:"isCountdown,omitempty"`
	LocationDescription  string   `protobuf:"bytes,35,opt,name=locationDescription,proto3" json:"locationDescription,omitempty"`
	OrderFinish          int64    `protobuf:"varint,36,opt,name=orderFinish,proto3" json:"orderFinish,omitempty"`
	ExpiredTimeExtend    string   `protobuf:"bytes,37,opt,name=expiredTimeExtend,proto3" json:"expiredTimeExtend,omitempty"`
	UrlInvoice           string   `protobuf:"bytes,38,opt,name=urlInvoice,proto3" json:"urlInvoice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataOrder) Reset()         { *m = DataOrder{} }
func (m *DataOrder) String() string { return proto.CompactTextString(m) }
func (*DataOrder) ProtoMessage()    {}
func (*DataOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65b0626cc3aada8, []int{2}
}

func (m *DataOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataOrder.Unmarshal(m, b)
}
func (m *DataOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataOrder.Marshal(b, m, deterministic)
}
func (m *DataOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataOrder.Merge(m, src)
}
func (m *DataOrder) XXX_Size() int {
	return xxx_messageInfo_DataOrder.Size(m)
}
func (m *DataOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_DataOrder.DiscardUnknown(m)
}

var xxx_messageInfo_DataOrder proto.InternalMessageInfo

func (m *DataOrder) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *DataOrder) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *DataOrder) GetRemoved() int64 {
	if m != nil {
		return m.Removed
	}
	return 0
}

func (m *DataOrder) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func (m *DataOrder) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

func (m *DataOrder) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DataOrder) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DataOrder) GetAgentId() string {
	if m != nil {
		return m.AgentId
	}
	return ""
}

func (m *DataOrder) GetDepositAmount() float32 {
	if m != nil {
		return m.DepositAmount
	}
	return 0
}

func (m *DataOrder) GetShippingFee() float32 {
	if m != nil {
		return m.ShippingFee
	}
	return 0
}

func (m *DataOrder) GetShippingMethod() int32 {
	if m != nil {
		return m.ShippingMethod
	}
	return 0
}

func (m *DataOrder) GetOrderStatusCustomer() int32 {
	if m != nil {
		return m.OrderStatusCustomer
	}
	return 0
}

func (m *DataOrder) GetOrderType() string {
	if m != nil {
		return m.OrderType
	}
	return ""
}

func (m *DataOrder) GetProgressPickup() int32 {
	if m != nil {
		return m.ProgressPickup
	}
	return 0
}

func (m *DataOrder) GetOrderLater() string {
	if m != nil {
		return m.OrderLater
	}
	return ""
}

func (m *DataOrder) GetEstimatedArrival() string {
	if m != nil {
		return m.EstimatedArrival
	}
	return ""
}

func (m *DataOrder) GetEstimatedPickup() string {
	if m != nil {
		return m.EstimatedPickup
	}
	return ""
}

func (m *DataOrder) GetCustomerPlace() string {
	if m != nil {
		return m.CustomerPlace
	}
	return ""
}

func (m *DataOrder) GetCustomerAddress() string {
	if m != nil {
		return m.CustomerAddress
	}
	return ""
}

func (m *DataOrder) GetCustomerLatitude() float32 {
	if m != nil {
		return m.CustomerLatitude
	}
	return 0
}

func (m *DataOrder) GetCustomerLongitude() float32 {
	if m != nil {
		return m.CustomerLongitude
	}
	return 0
}

func (m *DataOrder) GetAgentLatitude() float32 {
	if m != nil {
		return m.AgentLatitude
	}
	return 0
}

func (m *DataOrder) GetAgentLongitude() float32 {
	if m != nil {
		return m.AgentLongitude
	}
	return 0
}

func (m *DataOrder) GetOrderStatusAgent() int32 {
	if m != nil {
		return m.OrderStatusAgent
	}
	return 0
}

func (m *DataOrder) GetCostOrder() float32 {
	if m != nil {
		return m.CostOrder
	}
	return 0
}

func (m *DataOrder) GetAmountStatus() bool {
	if m != nil {
		return m.AmountStatus
	}
	return false
}

func (m *DataOrder) GetExpiredTime() int64 {
	if m != nil {
		return m.ExpiredTime
	}
	return 0
}

func (m *DataOrder) GetCompletedTime() int64 {
	if m != nil {
		return m.CompletedTime
	}
	return 0
}

func (m *DataOrder) GetDistance() float32 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *DataOrder) GetConfirmButton() bool {
	if m != nil {
		return m.ConfirmButton
	}
	return false
}

func (m *DataOrder) GetConfirmButtonAgent() bool {
	if m != nil {
		return m.ConfirmButtonAgent
	}
	return false
}

func (m *DataOrder) GetAmountStatusInvalid() bool {
	if m != nil {
		return m.AmountStatusInvalid
	}
	return false
}

func (m *DataOrder) GetOrderCode() string {
	if m != nil {
		return m.OrderCode
	}
	return ""
}

func (m *DataOrder) GetIsCountdown() bool {
	if m != nil {
		return m.IsCountdown
	}
	return false
}

func (m *DataOrder) GetLocationDescription() string {
	if m != nil {
		return m.LocationDescription
	}
	return ""
}

func (m *DataOrder) GetOrderFinish() int64 {
	if m != nil {
		return m.OrderFinish
	}
	return 0
}

func (m *DataOrder) GetExpiredTimeExtend() string {
	if m != nil {
		return m.ExpiredTimeExtend
	}
	return ""
}

func (m *DataOrder) GetUrlInvoice() string {
	if m != nil {
		return m.UrlInvoice
	}
	return ""
}

func init() {
	proto.RegisterType((*OrderRequest)(nil), "proto.OrderRequest")
	proto.RegisterType((*OrderResponse)(nil), "proto.OrderResponse")
	proto.RegisterType((*DataOrder)(nil), "proto.DataOrder")
}

func init() { proto.RegisterFile("proto/order.proto", fileDescriptor_f65b0626cc3aada8) }

var fileDescriptor_f65b0626cc3aada8 = []byte{
	// 1017 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x5f, 0x73, 0x1b, 0x35,
	0x10, 0xc7, 0x49, 0x9b, 0xc6, 0xca, 0x7f, 0x25, 0x0d, 0x22, 0x2d, 0xc5, 0xb8, 0xa5, 0x93, 0x61,
	0xa8, 0xd3, 0x29, 0x0f, 0x30, 0x0c, 0x0c, 0xd8, 0x0e, 0x69, 0x33, 0x13, 0xa6, 0x19, 0x27, 0x7d,
	0xe1, 0x4d, 0x3e, 0x2d, 0x8e, 0xa6, 0x3e, 0xe9, 0x90, 0x74, 0xa6, 0x79, 0xe0, 0x03, 0x33, 0xf0,
	0x21, 0x18, 0xad, 0x74, 0xf6, 0x5d, 0x6c, 0x66, 0x38, 0x3f, 0xf9, 0xf6, 0xb7, 0xbb, 0xbf, 0xfd,
	0xa3, 0xd5, 0xca, 0x64, 0x2f, 0x33, 0xda, 0xe9, 0x13, 0x6d, 0x04, 0x98, 0x0e, 0x7e, 0xd3, 0xfb,
	0xf8, 0x73, 0xb4, 0x1b, 0x34, 0x43, 0x6e, 0xa1, 0x53, 0x41, 0x72, 0x5b, 0x98, 0xb6, 0xff, 0x24,
	0x9b, 0x6f, 0xbd, 0xe7, 0x00, 0x7e, 0xcf, 0xc1, 0x3a, 0xfa, 0x98, 0x34, 0x4d, 0xf8, 0x3c, 0x17,
	0xac, 0xd1, 0x6a, 0x1c, 0x37, 0x07, 0x33, 0x80, 0x7e, 0x49, 0x76, 0xa3, 0xd0, 0xbb, 0xbd, 0x02,
	0x33, 0x91, 0x09, 0xb0, 0x15, 0x34, 0x9a, 0xc3, 0xe9, 0x53, 0x72, 0xcf, 0xc7, 0x61, 0xab, 0xad,
	0xc6, 0xf1, 0xc6, 0xab, 0x9d, 0x10, 0xaf, 0x73, 0xca, 0x1d, 0x7f, 0x67, 0xc1, 0x0c, 0x50, 0xd9,
	0xfe, 0xbb, 0x41, 0xb6, 0x62, 0x7c, 0x9b, 0x69, 0x65, 0x81, 0x1e, 0x92, 0x35, 0xeb, 0xb8, 0xcb,
	0x2d, 0x46, 0xbf, 0x3f, 0x88, 0x12, 0x65, 0xe4, 0x41, 0x0a, 0xd6, 0xf2, 0x51, 0x11, 0xb1, 0x10,
	0xab, 0x29, 0xaf, 0xfe, 0x9f, 0x94, 0xef, 0xfd, 0x47, 0xca, 0x1d, 0xd2, 0x14, 0xdc, 0x71, 0x4c,
	0x88, 0xdd, 0xc7, 0xbc, 0x77, 0x4b, 0x79, 0x87, 0x44, 0x67, 0x26, 0xde, 0x7e, 0x2c, 0xad, 0x0b,
	0xf6, 0x6b, 0xad, 0xd5, 0xc5, 0xf6, 0x53, 0x93, 0xf6, 0x5f, 0x84, 0x34, 0xa7, 0x0a, 0x5f, 0x51,
	0x62, 0x80, 0x3b, 0x08, 0x8d, 0x5e, 0x1d, 0x14, 0xa2, 0xd7, 0xe4, 0x99, 0x40, 0xcd, 0x4a, 0xd0,
	0x44, 0xd1, 0x6b, 0x0c, 0xa4, 0x7a, 0x02, 0xa1, 0xd2, 0xd5, 0x41, 0x21, 0xfa, 0x2e, 0x44, 0xf7,
	0xde, 0x6d, 0x2c, 0x70, 0x06, 0x78, 0x6d, 0xa4, 0xe8, 0xdd, 0x62, 0x65, 0xcd, 0xc1, 0x0c, 0xa0,
	0xdb, 0x64, 0x45, 0x0a, 0xb6, 0x86, 0xf0, 0x8a, 0x14, 0xfe, 0x0c, 0xfc, 0xe9, 0x9c, 0x0b, 0xf6,
	0x00, 0xb1, 0x28, 0xf9, 0xe8, 0x7c, 0x04, 0xca, 0xf7, 0x79, 0x3d, 0x9c, 0x41, 0x14, 0xe9, 0x33,
	0xb2, 0x25, 0x20, 0xd3, 0x56, 0xba, 0x6e, 0xaa, 0x73, 0xe5, 0x58, 0xb3, 0xd5, 0x38, 0x5e, 0x19,
	0x54, 0x41, 0xda, 0x22, 0x1b, 0xf6, 0x46, 0x66, 0x99, 0x54, 0xa3, 0x33, 0x00, 0x46, 0xd0, 0xa6,
	0x0c, 0xd1, 0xe7, 0x64, 0xbb, 0x10, 0x7f, 0x01, 0x77, 0xa3, 0x05, 0xdb, 0xc0, 0x29, 0xb8, 0x83,
	0xd2, 0x97, 0x64, 0x1f, 0x07, 0xfe, 0x0a, 0x87, 0xa3, 0x9f, 0x5b, 0xa7, 0x53, 0x30, 0x6c, 0x13,
	0x8d, 0x17, 0xa9, 0x7c, 0x07, 0x10, 0xbe, 0xbe, 0xcd, 0x80, 0x6d, 0x85, 0x0e, 0x4c, 0x01, 0x1f,
	0x37, 0x33, 0x7a, 0x64, 0xc0, 0xda, 0x4b, 0x99, 0xbc, 0xcf, 0x33, 0xb6, 0x1d, 0xe2, 0x56, 0x51,
	0xfa, 0x84, 0x10, 0x74, 0xba, 0xe0, 0x0e, 0x0c, 0xdb, 0x41, 0x9a, 0x12, 0xe2, 0xa7, 0x0d, 0xac,
	0x93, 0xa9, 0x6f, 0x6c, 0xd7, 0x18, 0x39, 0xe1, 0x63, 0xb6, 0x1b, 0xa6, 0xed, 0x2e, 0x4e, 0x8f,
	0xc9, 0xce, 0x14, 0x8b, 0x41, 0xf7, 0xd0, 0xf4, 0x2e, 0xec, 0xbb, 0x9b, 0xc4, 0x3a, 0x2e, 0xc7,
	0x3c, 0x01, 0x46, 0xd1, 0xae, 0x0a, 0x7a, 0xbe, 0x02, 0xe8, 0x0a, 0xe1, 0x93, 0x66, 0xfb, 0x81,
	0xef, 0x0e, 0xec, 0xb3, 0x2c, 0xa0, 0x0b, 0xee, 0xa4, 0xcb, 0x05, 0xb0, 0x03, 0x3c, 0x8c, 0x39,
	0x9c, 0x7e, 0x45, 0xf6, 0xa6, 0x98, 0x56, 0xa3, 0x60, 0xfc, 0x10, 0x8d, 0xe7, 0x15, 0x3e, 0x53,
	0x1c, 0x89, 0x29, 0xed, 0x61, 0x98, 0x83, 0x0a, 0xe8, 0xbb, 0x1d, 0x80, 0x29, 0xe1, 0xc7, 0x68,
	0x76, 0x07, 0xf5, 0x79, 0x96, 0x8e, 0xb2, 0xeb, 0x95, 0x8c, 0xe1, 0xb9, 0xcc, 0xe1, 0x38, 0xff,
	0xba, 0xb8, 0x8b, 0x9f, 0x20, 0xdd, 0x0c, 0xa0, 0x6d, 0xb2, 0xc9, 0x71, 0x06, 0x83, 0x0b, 0x3b,
	0x6a, 0x35, 0x8e, 0xd7, 0x07, 0x15, 0xcc, 0x4f, 0x27, 0x7c, 0xc8, 0xa4, 0x01, 0x71, 0x2d, 0x53,
	0x60, 0x8f, 0xf0, 0x7e, 0x95, 0x21, 0x3c, 0x07, 0x9d, 0x66, 0x63, 0x70, 0xd1, 0xe6, 0x31, 0xda,
	0x54, 0x41, 0x7a, 0x44, 0xd6, 0x85, 0xb4, 0x8e, 0xab, 0x04, 0xd8, 0xa7, 0x98, 0xc8, 0x54, 0x0e,
	0x0c, 0xea, 0x37, 0x69, 0xd2, 0x5e, 0xee, 0x9c, 0x56, 0xec, 0x09, 0x26, 0x52, 0x05, 0x69, 0x87,
	0xd0, 0x0a, 0x10, 0x2a, 0xff, 0x0c, 0x4d, 0x17, 0x68, 0xfc, 0x6d, 0x28, 0x57, 0x72, 0xae, 0x26,
	0x7c, 0x2c, 0x05, 0x6b, 0xa1, 0xc3, 0x22, 0xd5, 0xf4, 0x36, 0xf4, 0xb5, 0x00, 0xf6, 0x79, 0xe9,
	0x36, 0x78, 0xc0, 0x77, 0x42, 0xda, 0xbe, 0xf7, 0x12, 0xfa, 0x0f, 0xc5, 0xda, 0xc8, 0x53, 0x86,
	0x7c, 0xc4, 0xb1, 0x4e, 0xb8, 0x93, 0x5a, 0x9d, 0x82, 0x4d, 0x8c, 0xcc, 0xfc, 0x27, 0x7b, 0x8a,
	0x4c, 0x8b, 0x54, 0x9e, 0x13, 0x03, 0x9c, 0x49, 0x25, 0xed, 0x0d, 0x7b, 0x16, 0xba, 0x5b, 0x82,
	0xfc, 0xa4, 0x95, 0x9a, 0xfd, 0xf3, 0x07, 0x07, 0x4a, 0xb0, 0x2f, 0x90, 0x71, 0x5e, 0xe1, 0x6f,
	0x62, 0x6e, 0xc6, 0xe7, 0x6a, 0xa2, 0xfd, 0x46, 0x7f, 0x1e, 0x6e, 0xe2, 0x0c, 0x79, 0xf5, 0x4f,
	0x33, 0xbe, 0x6c, 0xc5, 0x72, 0xff, 0x96, 0x34, 0x5f, 0x43, 0x18, 0x07, 0x4b, 0xf7, 0xe3, 0x9a,
	0x2e, 0xbf, 0x7d, 0x47, 0x07, 0x55, 0x30, 0x3c, 0x48, 0xed, 0x8f, 0xe8, 0x37, 0x64, 0xbd, 0xf0,
	0xac, 0xe7, 0xf8, 0x1d, 0xd9, 0xe8, 0xe3, 0x0a, 0x5e, 0xce, 0xf7, 0x1d, 0x2e, 0xe8, 0xe5, 0x7c,
	0x4f, 0xc1, 0x0f, 0xe4, 0x12, 0xbe, 0x3f, 0x91, 0xfd, 0x62, 0x67, 0x5e, 0xe5, 0xc3, 0x54, 0xc6,
	0xba, 0x69, 0x34, 0xef, 0x71, 0x0b, 0x05, 0xc5, 0x7e, 0x05, 0x5b, 0xc4, 0x70, 0x0a, 0x8e, 0xcb,
	0x71, 0x6d, 0x86, 0x2e, 0x39, 0x28, 0x18, 0xfa, 0x61, 0xda, 0x6b, 0x53, 0xbc, 0x21, 0x8f, 0x0a,
	0x8a, 0xd7, 0xe0, 0x2e, 0x8a, 0x27, 0xf8, 0xd2, 0xe8, 0xc4, 0x6f, 0xc0, 0x25, 0x93, 0xb9, 0xe1,
	0x6a, 0x04, 0x71, 0x5d, 0x2c, 0xd7, 0x91, 0xbe, 0x5f, 0x03, 0xf5, 0x3b, 0xf2, 0x23, 0xa1, 0xb3,
	0x24, 0x20, 0x79, 0x5f, 0x9b, 0xe0, 0x2d, 0x69, 0xe3, 0xae, 0x88, 0xcd, 0x88, 0x7d, 0xe8, 0x2a,
	0xf1, 0x46, 0x5a, 0xa7, 0xcd, 0x6d, 0x6d, 0xc2, 0x1f, 0xc8, 0x2e, 0x12, 0x76, 0x93, 0x04, 0x32,
	0xb7, 0xb4, 0x7b, 0x78, 0xe1, 0x6a, 0xbb, 0x7f, 0x4f, 0x76, 0x42, 0x39, 0x5a, 0xaa, 0x51, 0x6d,
	0xef, 0x1e, 0x79, 0x88, 0xde, 0x71, 0xb8, 0xfc, 0xce, 0xab, 0xcd, 0xd1, 0x27, 0x87, 0xc8, 0x11,
	0x2e, 0x69, 0xf8, 0x83, 0xb3, 0xcc, 0x94, 0x16, 0xa7, 0x72, 0x06, 0x70, 0x6d, 0xb8, 0xb2, 0x3c,
	0xf1, 0xeb, 0xb2, 0x2e, 0x53, 0xef, 0xe5, 0xaf, 0x9d, 0x91, 0x74, 0x37, 0xf9, 0xb0, 0x93, 0xe8,
	0xf4, 0x44, 0xc0, 0x84, 0xa7, 0x43, 0x39, 0x96, 0xea, 0x64, 0xa8, 0xc5, 0x8b, 0xf8, 0xfd, 0x22,
	0xd1, 0x69, 0xaa, 0xd5, 0x09, 0x12, 0x0c, 0xd7, 0xf0, 0xe7, 0xeb, 0x7f, 0x03, 0x00, 0x00, 0xff,
	0xff, 0x84, 0x88, 0xfc, 0x63, 0x40, 0x0c, 0x00, 0x00,
}
