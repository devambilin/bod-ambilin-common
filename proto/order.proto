syntax = "proto3";

package proto;
option go_package = "github.com/devambilin/bod-ambilin-common/proto";

import "proto/user.proto";

service OrderService {
    //for clients grpc
    rpc GetOrders(OrderRequest) returns(OrderResponse){}
    rpc GetOrderDetail(OrderDetailRequest) returns(OrderDetailResponse){}
    rpc GetOrderDetailAgent(OrderDetailRequest) returns(OrderDetailResponse){}
    rpc CreateOrder(OrderInputRequest) returns(OrderResponse){}
    rpc UpdateOrder(OrderRequest) returns(OrderResponse){}
    rpc DeleteOrder(OrderRequest) returns(OrderResponse){}
    rpc SendNotificationFirebase(FirebaseRequest) returns(OrderResponse){}
    rpc OrderConfirm(OrderConfirmRequest) returns(OrderConfirmResponse){}
    rpc CountOrderAgent(CountOrderRequest) returns(OrderTotalResponse){}
    rpc CountOrderNasabah(CountOrderRequest) returns(OrderTotalResponse){}
    rpc ConfirmAgent(OrderConfirmRequest) returns(OrderConfirmResponse){}
    rpc OrderHistory(CountOrderRequest) returns(OrderHistoryResponse){}
    rpc ChangeStatusAgent(IncomingOrderRequest) returns(ChangeStatusAgentResponse){}
    rpc ChangeStatusNasabah(IncomingOrderRequest) returns(ChangeStatusNasabahResponse){}
    rpc FinishOrder(OrderConfirmRequest) returns(OrderResponse){}
    rpc CancelOrder(OrderConfirmRequest) returns(OrderResponse){}
    rpc DailyOrderSum(CountOrderRequest) returns(DailySumResponse){}
    rpc UpdateNominal(UpdateNominalRequest) returns(UpdateNominalResponse){}
    rpc OrderCheck(CountOrderRequest) returns(OrderCheckResponse){}
    rpc UpdateStatusCountdown(CountdownRequest) returns(UpdateStatusResponse){}
    rpc ProcessOrder(OrderDetailRequest) returns(OrderProcessResponse){}
    //for customer
//    rpc CustomerSubmitOrder(BaseRequest) returns (BaseResponse){}
//    rpc CustomerDetailOrder(BaseRequest) returns (BaseResponse){}
//    rpc CustomerConfirmOrder(BaseRequest) returns (BaseResponse){}
//    rpc CustomerGetListOrderProcess(BaseRequest) returns (BaseResponse){}
//    rpc CustomerChangeStatus(BaseRequest) returns (BaseResponse){}
//    rpc CustomerCancelOrder(BaseRequest) returns (BaseResponse){}
//    rpc CustomerCheckOrder(BaseRequest) returns (BaseResponse){}
//    //for agent
//    rpc AgentGetListProcessAndHistoryOrder(BaseRequest) returns (BaseResponse){}
//    rpc AgentAcceptOrder(BaseRequest) returns (BaseResponse){}
//    rpc AgentPickupOrder(BaseRequest) returns (BaseResponse){}
//    rpc AgentGoingOrder(BaseRequest) returns (BaseResponse){}
//    rpc AgentConfirmCodeOrder(BaseRequest) returns (BaseResponse){}
//    rpc AgentUpdateAmountOrder(BaseRequest) returns (BaseResponse){}
//    rpc AgentGetFeeTransactionOrder(BaseRequest) returns (BaseResponse){}
}

message OrderRequest {
    string requestId = 1;
    string requestByService = 2;
    DataUser user = 3;
}

message OrderInputRequest {
    string agentId = 1;
    string orderType = 2;
    string orderNanti = 3;
    float orderSetoran = 4;
    float nasabahLat = 5;
    float nasabahLong = 6;
    string nasabahAddress = 7;
    float biayaNanti = 8;
    int32 distance = 9;
    string keterangan = 10;
    string requestId = 11;
    string requestByService = 12;
    string userId = 13;
}

message OrderDetailRequest {
    string requestId = 1;
    string requestByService = 2;
    string transactionId = 3;
    string userId = 4;
}

message CountOrderRequest {
    string requestId = 1;
    string requestByService = 2;
    string userId = 3;
    int32 page  = 4;
    int32 limit = 5;
}

message OrderDetailResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    string requestByService = 4;
    OrderDetail data = 5;
}

message OrderDetail {
    int64 orderStatus = 1;
    OrderAgent agent = 2;
    OrderNasabah nasabah = 3;
    DataOrder orderDetail = 4;
    string messageExpireAgent = 5;
}

message OrderAgent {
    string agentId = 1;
    string agentName = 2;
    string agentPhone = 3;
    string agentAddress = 4;
    int64 agentDistance = 5;
    string agentRating = 6;
    float orderCost = 7;
    string agentPhotoUrl = 8;
}

message OrderNasabah {
    string nasabahName = 1;
    string nasabahPlace = 2;
    string nasabahAddress = 3;
    float nasabahLat = 4;
    float nasabahLong = 5;
    string nasabahPhone = 6;
}
  
message OrderResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    string requestByService = 4;
    DataOrder dataOrder = 5;
    repeated DataOrder listOrder = 6;
}

message FirebaseRequest {
    string requestId = 1;
    string requestByService = 2;
    string firebaseUrl = 3;
    string agentId = 4;
    string transactionId = 5;
    float nominal = 6;
}

message OrderConfirmRequest {
    string requestId = 1;
    string requestByService = 2;
    string transactionId = 3;
    int64 otp = 4;
}

message OrderConfirmResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    string requestByService = 4;
    OrderStatus data = 5;
}

message OrderProcessRequest {
    string requestId = 1;
    string requestByService = 2;
    string transactionId = 3;
    int64 otp = 4;
}

message OrderProcessResponse {
    string requestId = 1;
    string requestByService = 2;
    string transactionId = 3;
    OrderTransform data = 4;
}

message OrderTransform {
    string id = 1;
    string agentName = 2;
    string agentAddress = 3;
    string estimatedPickup = 4;
    float setoran = 5;
    string orderType = 6;
}

message OrderTotalResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    string requestByService = 4;
    TotalOrder data = 5;
}

message TotalOrder {
    int64 totalOrder = 1;
}

message OrderStatus {
    int64 orderStatus = 1;
    int32 attempt = 2;
}

message AgentConfirmResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    string requestByService = 4;
    TotalOrder data = 5;
}

message AgentConfirm {
    int64 attempt = 1;
    int64 orderStatus = 2;
    repeated DataOrder listOrder = 3;
}

message IncomingOrderRequest {
    string requestId = 1;
    string requestByService = 2;
    string transactionId = 3;
    int32 status = 4;
    float costOrder = 5;
    string estimatePickup = 6;
    bool statusNominal = 7;
    bool statusNominalInvalid = 8;
    string Id = 9;
}

message OrderHistoryResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    string requestByService = 4;
    OrderHistory data = 5;
}

message OrderHistory {
    repeated DataOrder dalamProses = 1;
    repeated DataOrder riwayat = 2;
}

message ChangeStatusAgentResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    string requestByService = 4;
    OrderStatus data = 5;
}

message ChangeStatusNasabahResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    string requestByService = 4;
    OrderStatus data = 5;
}

message ChangeStatusNasabah {
    int64 todayFee = 1;
    int64 todayUsage = 2;
    int64 todayLimit = 3;
    int64 todayTotalPickup = 4;
    int64 todayOngoingOrder = 5;
    int64 todayCompleteOrder = 6;
    int64 orderStatus = 7;
}

message DailySumResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    string requestByService = 4;
    Summary data = 5;
}

message Summary {
    int64 feeDiterima = 1;
    int64 limitPickupCurrent = 2;
    int64 limitPickupMax = 3;
    int64 nominalPickup = 4;
    int64 orderProccess = 5;
    int64 orderFinished = 6;
}

message CancelOrderResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    string requestByService = 4;
}

message ResendOTPResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    string requestByService = 4;
}

message UpdateNominalRequest {
    string requestId = 1;
    string requestByService = 2;
    string transactionId = 3;
    float nominal = 4;
}

message UpdateNominalResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    string requestByService = 4;
    UpdateNominal data = 5;
}

message UpdateNominal {
    float nominal = 1;
}

message OrderCheckResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    string requestByService = 4;
    OrderCheck data = 5;
}

message OrderCheck {
    int64 submitStatus = 1;
}

message UpdateStatusResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    string requestByService = 4;
    UpdateStatus data = 5;
}

message UpdateStatus {
    bool isCountdown = 1;
}

message ExtendResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    string requestByService = 4;
}

message CountdownRequest {
    string requestId = 1;
    string requestByService = 2;
    string transactionId = 3;
    bool isCountdown = 4;
}



message DataOrder {
    int64 created = 1;
    int64 updated = 2;
    int64 removed = 3;
    string createdBy = 4;
    string updatedBy = 5;
    string id = 6;
    string userId = 7;
    string agentId = 8;
    float depositAmount = 9;
    float shippingFee = 10;
    int32 shippingMethod = 11;
    int32 orderStatusCustomer = 12;
    string orderType = 13;
    int32 progressPickup = 14;
    string orderLater = 15;
    string estimatedArrival = 16;
    string estimatedPickup = 17;
    string customerPlace = 18;
    string customerAddress = 19;
    float customerLatitude = 20;
    float customerLongitude = 21;
    float agentLatitude = 22;
    float agentLongitude = 23;
    int32 orderStatusAgent = 24;
    float costOrder = 25;
    bool amountStatus = 26;
    int64 expiredTime = 27;
    int64 completedTime = 28;
    float distance = 29;
    bool confirmButton = 30;
    bool confirmButtonAgent = 31;
    bool amountStatusInvalid = 32;
    string orderCode = 33;
    bool isCountdown = 34;
    string locationDescription = 35;
    int64 orderFinish = 36;
    string expiredTimeExtend = 37;
    string urlInvoice = 38;
}