syntax = "proto3";

package proto;
option go_package = "github.com/devambilin/bod-ambilin-common/proto";

import "proto/dashboard.proto";
import "proto/user.proto";
import "proto/agent.proto";

service AuthService {
	  //for global
	rpc GetDataSession(SessionRequest) returns (SessionResponse){}
	  rpc SendSms(SmsRequest) returns (SmsResponse){}
	  rpc SendEmail(MailRequest) returns (MailResponse){}
    //for admin
    rpc AdminValidateSession(SessionRequest) returns (SessionResponse){}
    rpc AdminLogin(AdminLoginRequest) returns (AdminLoginResponse){}
	  rpc AdminLoginValidate(AdminLoginRequest) returns (DefaultResponse){}
    rpc AdminForgotPassword(AdminLoginRequest) returns (DefaultResponse){}
    rpc AdminResetPassword(AdminResetPasswordRequest) returns (DefaultResponse){}
    rpc AdminResetPasswordValidate(AdminResetPasswordRequest) returns (DefaultResponse){}
    rpc AdminChangePassword(AdminChangePasswordRequest) returns (DefaultResponse){}
    rpc AdminLogout(LogoutRequest) returns (DefaultResponse){}
    //for customer
    rpc CustomerValidateSession(SessionRequest) returns (SessionResponse){}
    rpc CustomerLogin(CustomerLoginRequest) returns (CustomerLoginResponse){}
    rpc CustomerCreatePin(CustomerLoginRequest) returns (CustomerLoginResponse){}
    rpc CustomerVerifyPin(CustomerLoginRequest) returns (CustomerLoginResponse){}
	  rpc CustomerVerifyChangePin(CustomerLoginRequest) returns (DefaultResponse){}
    rpc CustomerChangePin(CustomerLoginRequest) returns (DefaultResponse){}
    rpc CustomerForgotPin(CustomerLoginRequest) returns (DefaultResponse){}
	  rpc CustomerVerifyOtpForgotPin(CustomerVerifyOtpRequest) returns (CustomerLoginResponse){}
    rpc CustomerLogout(LogoutRequest) returns (DefaultResponse){}
    //for agent
    rpc AgentValidateSession(SessionRequest) returns (SessionResponse){}
    rpc AgentLogin(AgentLoginRequest) returns (DefaultResponse){}
    rpc AgentVerifyOtpLogin(AgentLoginRequest) returns (AgentLoginResponse){}
    rpc AgentLogout(LogoutRequest) returns (DefaultResponse){}
    //for partner
    rpc PartnerLogin(AgentLoginPartnerRequest) returns (AgentLoginResponse){}
    rpc PartnerDetail(PartnerRequest) returns (PartnerResponse){}
}
//for admin
message AdminLoginRequest {
    string requestId = 1;
    string email = 2;
    string password = 3;
    string resCaptcha = 4;
}

message AdminLoginResponse {
    string requestId = 1;
    int32 status = 2;
    string message = 3;
    string token = 4;
    DataAdmin dataAdmin = 5;
}

message AdminResetPasswordRequest {
    string requestId = 1;
    string email = 2;
    string code = 3;
    string password = 4;
}

message AdminChangePasswordRequest {
    string requestId = 1;
    string oldPassword = 2;
    string newPassword = 3;
}
//for customer
message CustomerLoginRequest {
    string requestId = 1;
    string phone = 2;
    string pin = 3;
}

message CustomerLoginResponse {
    string requestId = 1;
    int32 status = 2;
    string message = 3;
    string token = 4;
    DataUser dataUser = 5;
}

message CustomerVerifyOtpRequest {
    string requestId = 1;
    string phone = 2;
    string otpCode = 3;
}

//for agent
message AgentLoginRequest {
    string requestId = 1;
    string phone = 2;
    string otpCode = 3;
    string resCaptcha = 4;
}

message AgentLoginResponse {
    string requestId = 1;
    int32 status = 2;
    string message = 3;
    string token = 4;
    DataAgent dataAgent = 5;
}

message DataPartner {
    string outletCode = 2;
    string outletName = 3;
    string merchantCode = 4;
    string branchCode = 5;
    string regionCode = 6;
    string regionName = 7;
    string branchName = 8;
    string zipCode = 9;
    string phoneNumber = 10;
    string address = 11;
    float longitude = 12;
    float latitude = 13;
}

message AgentLoginPartnerRequest {
    string requestId = 1;
    DataPartner dataPartner = 2;
}

message PartnerRequest {
    string requestId = 1;
    string clientId = 2;
    string token = 3;
}

message PartnerResponse {
    string requestId = 1;
    int32 status = 2;
    string message = 3;
    DataPartner dataPartner = 4;
}

//for all
message DefaultResponse {
    string requestId = 1;
    int32 status = 2;
    string message = 3;
}

message LogoutRequest {
    string requestId = 1;
    string token = 2;
}

message SessionRequest {
    string token = 1;
    string signature = 2;
}
  
message SessionResponse {
    int32 status = 1;
    string message = 2;
    SessionData data = 3;
	  string requestId = 4;
}
  
message SessionData {
    string username = 1;
    string name = 2;
    string type = 3;
    string userId = 4;
    string role = 5;
}

message MailRequest {
	  string requestId = 1;
	  string type = 2;
	  string subject = 3;
	  string to = 4;
    string name = 5;
    string url = 6;
    string pathTemplate = 7;
}

message MailResponse {
	  int32 status = 1;
    string message = 2;
	  string requestId = 3;
}

message SmsRequest {
    string requestId = 1;
	  string destination = 2;
	  string text = 3;
}

message SmsResponse {
	  int32 status = 1;
    string message = 2;
	  string requestId = 3;
}
