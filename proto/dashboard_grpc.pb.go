// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.12
// source: proto/dashboard.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// DashboardServiceClient is the client API for DashboardService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DashboardServiceClient interface {
	// Config
	GetMasterConfig(ctx context.Context, in *MasterConfigRequest, opts ...grpc.CallOption) (*MasterConfigResponse, error)
	// Admin
	CreateAdminBrins(ctx context.Context, in *CreateAdminBrinsRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	GetAdmins(ctx context.Context, in *AdminListRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	GetAdmin(ctx context.Context, in *AdminRequest, opts ...grpc.CallOption) (*AdminResponse, error)
	CreateAdmin(ctx context.Context, in *AdminRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	UpdateAdmin(ctx context.Context, in *AdminRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	DeleteAdmin(ctx context.Context, in *AdminRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	CheckEmailAdmin(ctx context.Context, in *AdminRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	CheckPersonalNumberAdmin(ctx context.Context, in *AdminRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	UploadPhotoAdmin(ctx context.Context, in *UploadPhotoRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	RemovePhotoAdmin(ctx context.Context, in *AdminRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	// daily page
	Summary(ctx context.Context, in *DailySummaryRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	DailyTable(ctx context.Context, in *DailyTableRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	// Filter
	GetKancaFilter(ctx context.Context, in *GetFilterRequest, opts ...grpc.CallOption) (*DashboardBaseListResponse, error)
	GetKanwilFilter(ctx context.Context, in *GetFilterRequest, opts ...grpc.CallOption) (*DashboardBaseListResponse, error)
	GetAgentFilter(ctx context.Context, in *GetFilterRequest, opts ...grpc.CallOption) (*DashboardBaseListResponse, error)
	// Download
	Download(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	// Menu
	ListMenu(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (*DashboardBaseListResponse, error)
	// //promo
	GetListPromo(ctx context.Context, in *PromoListRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	GetDetailPromo(ctx context.Context, in *PromoRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	CreatePromo(ctx context.Context, in *PromoCreateRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	UpdatePromo(ctx context.Context, in *PromoCreateRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	ChangePicturePromo(ctx context.Context, in *PromoImageUpdateRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	DeletePromo(ctx context.Context, in *PromoRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	// record
	TopRatedAgents(ctx context.Context, in *TopRatedAgentsMessage, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	// rpc DownloadExecutive(BaseRequest) returns (DashboardBaseResponse){}
	// rpc DownloadOperational(BaseRequest) returns (DashboardBaseResponse){}
	// //CRUD Role
	// rpc GetListMenu(BaseRequest) returns (DashboardBaseResponse){}
	GetListOfficeRole(ctx context.Context, in *RoleRequest, opts ...grpc.CallOption) (*DashboardBaseListResponse, error)
	GetListRole(ctx context.Context, in *RoleRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	GetListRoleStatic(ctx context.Context, in *RoleRequest, opts ...grpc.CallOption) (*DashboardBaseListResponse, error)
	GetDetailRole(ctx context.Context, in *RoleRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	CreateRole(ctx context.Context, in *RoleCreateRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	UpdateRole(ctx context.Context, in *RoleCreateRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	DeleteRole(ctx context.Context, in *RoleCreateRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	// Activity
	GetHistoryActivity(ctx context.Context, in *HistoryActivityRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
	// Statistics
	GetStatistics(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error)
}

type dashboardServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDashboardServiceClient(cc grpc.ClientConnInterface) DashboardServiceClient {
	return &dashboardServiceClient{cc}
}

func (c *dashboardServiceClient) GetMasterConfig(ctx context.Context, in *MasterConfigRequest, opts ...grpc.CallOption) (*MasterConfigResponse, error) {
	out := new(MasterConfigResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/GetMasterConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) CreateAdminBrins(ctx context.Context, in *CreateAdminBrinsRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/CreateAdminBrins", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) GetAdmins(ctx context.Context, in *AdminListRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/GetAdmins", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) GetAdmin(ctx context.Context, in *AdminRequest, opts ...grpc.CallOption) (*AdminResponse, error) {
	out := new(AdminResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/GetAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) CreateAdmin(ctx context.Context, in *AdminRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/CreateAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) UpdateAdmin(ctx context.Context, in *AdminRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/UpdateAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) DeleteAdmin(ctx context.Context, in *AdminRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/DeleteAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) CheckEmailAdmin(ctx context.Context, in *AdminRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/CheckEmailAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) CheckPersonalNumberAdmin(ctx context.Context, in *AdminRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/CheckPersonalNumberAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) UploadPhotoAdmin(ctx context.Context, in *UploadPhotoRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/UploadPhotoAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) RemovePhotoAdmin(ctx context.Context, in *AdminRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/RemovePhotoAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) Summary(ctx context.Context, in *DailySummaryRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/Summary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) DailyTable(ctx context.Context, in *DailyTableRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/DailyTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) GetKancaFilter(ctx context.Context, in *GetFilterRequest, opts ...grpc.CallOption) (*DashboardBaseListResponse, error) {
	out := new(DashboardBaseListResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/GetKancaFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) GetKanwilFilter(ctx context.Context, in *GetFilterRequest, opts ...grpc.CallOption) (*DashboardBaseListResponse, error) {
	out := new(DashboardBaseListResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/GetKanwilFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) GetAgentFilter(ctx context.Context, in *GetFilterRequest, opts ...grpc.CallOption) (*DashboardBaseListResponse, error) {
	out := new(DashboardBaseListResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/GetAgentFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) Download(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/Download", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) ListMenu(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (*DashboardBaseListResponse, error) {
	out := new(DashboardBaseListResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/ListMenu", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) GetListPromo(ctx context.Context, in *PromoListRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/GetListPromo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) GetDetailPromo(ctx context.Context, in *PromoRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/GetDetailPromo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) CreatePromo(ctx context.Context, in *PromoCreateRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/CreatePromo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) UpdatePromo(ctx context.Context, in *PromoCreateRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/UpdatePromo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) ChangePicturePromo(ctx context.Context, in *PromoImageUpdateRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/ChangePicturePromo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) DeletePromo(ctx context.Context, in *PromoRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/DeletePromo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) TopRatedAgents(ctx context.Context, in *TopRatedAgentsMessage, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/TopRatedAgents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) GetListOfficeRole(ctx context.Context, in *RoleRequest, opts ...grpc.CallOption) (*DashboardBaseListResponse, error) {
	out := new(DashboardBaseListResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/GetListOfficeRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) GetListRole(ctx context.Context, in *RoleRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/GetListRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) GetListRoleStatic(ctx context.Context, in *RoleRequest, opts ...grpc.CallOption) (*DashboardBaseListResponse, error) {
	out := new(DashboardBaseListResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/GetListRoleStatic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) GetDetailRole(ctx context.Context, in *RoleRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/GetDetailRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) CreateRole(ctx context.Context, in *RoleCreateRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/CreateRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) UpdateRole(ctx context.Context, in *RoleCreateRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/UpdateRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) DeleteRole(ctx context.Context, in *RoleCreateRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/DeleteRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) GetHistoryActivity(ctx context.Context, in *HistoryActivityRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/GetHistoryActivity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dashboardServiceClient) GetStatistics(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (*DashboardBaseResponse, error) {
	out := new(DashboardBaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DashboardService/GetStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DashboardServiceServer is the server API for DashboardService service.
// All implementations must embed UnimplementedDashboardServiceServer
// for forward compatibility
type DashboardServiceServer interface {
	// Config
	GetMasterConfig(context.Context, *MasterConfigRequest) (*MasterConfigResponse, error)
	// Admin
	CreateAdminBrins(context.Context, *CreateAdminBrinsRequest) (*DashboardBaseResponse, error)
	GetAdmins(context.Context, *AdminListRequest) (*DashboardBaseResponse, error)
	GetAdmin(context.Context, *AdminRequest) (*AdminResponse, error)
	CreateAdmin(context.Context, *AdminRequest) (*DashboardBaseResponse, error)
	UpdateAdmin(context.Context, *AdminRequest) (*DashboardBaseResponse, error)
	DeleteAdmin(context.Context, *AdminRequest) (*DashboardBaseResponse, error)
	CheckEmailAdmin(context.Context, *AdminRequest) (*DashboardBaseResponse, error)
	CheckPersonalNumberAdmin(context.Context, *AdminRequest) (*DashboardBaseResponse, error)
	UploadPhotoAdmin(context.Context, *UploadPhotoRequest) (*DashboardBaseResponse, error)
	RemovePhotoAdmin(context.Context, *AdminRequest) (*DashboardBaseResponse, error)
	// daily page
	Summary(context.Context, *DailySummaryRequest) (*DashboardBaseResponse, error)
	DailyTable(context.Context, *DailyTableRequest) (*DashboardBaseResponse, error)
	// Filter
	GetKancaFilter(context.Context, *GetFilterRequest) (*DashboardBaseListResponse, error)
	GetKanwilFilter(context.Context, *GetFilterRequest) (*DashboardBaseListResponse, error)
	GetAgentFilter(context.Context, *GetFilterRequest) (*DashboardBaseListResponse, error)
	// Download
	Download(context.Context, *DownloadRequest) (*DashboardBaseResponse, error)
	// Menu
	ListMenu(context.Context, *DownloadRequest) (*DashboardBaseListResponse, error)
	// //promo
	GetListPromo(context.Context, *PromoListRequest) (*DashboardBaseResponse, error)
	GetDetailPromo(context.Context, *PromoRequest) (*DashboardBaseResponse, error)
	CreatePromo(context.Context, *PromoCreateRequest) (*DashboardBaseResponse, error)
	UpdatePromo(context.Context, *PromoCreateRequest) (*DashboardBaseResponse, error)
	ChangePicturePromo(context.Context, *PromoImageUpdateRequest) (*DashboardBaseResponse, error)
	DeletePromo(context.Context, *PromoRequest) (*DashboardBaseResponse, error)
	// record
	TopRatedAgents(context.Context, *TopRatedAgentsMessage) (*DashboardBaseResponse, error)
	// rpc DownloadExecutive(BaseRequest) returns (DashboardBaseResponse){}
	// rpc DownloadOperational(BaseRequest) returns (DashboardBaseResponse){}
	// //CRUD Role
	// rpc GetListMenu(BaseRequest) returns (DashboardBaseResponse){}
	GetListOfficeRole(context.Context, *RoleRequest) (*DashboardBaseListResponse, error)
	GetListRole(context.Context, *RoleRequest) (*DashboardBaseResponse, error)
	GetListRoleStatic(context.Context, *RoleRequest) (*DashboardBaseListResponse, error)
	GetDetailRole(context.Context, *RoleRequest) (*DashboardBaseResponse, error)
	CreateRole(context.Context, *RoleCreateRequest) (*DashboardBaseResponse, error)
	UpdateRole(context.Context, *RoleCreateRequest) (*DashboardBaseResponse, error)
	DeleteRole(context.Context, *RoleCreateRequest) (*DashboardBaseResponse, error)
	// Activity
	GetHistoryActivity(context.Context, *HistoryActivityRequest) (*DashboardBaseResponse, error)
	// Statistics
	GetStatistics(context.Context, *DownloadRequest) (*DashboardBaseResponse, error)
	mustEmbedUnimplementedDashboardServiceServer()
}

// UnimplementedDashboardServiceServer must be embedded to have forward compatible implementations.
type UnimplementedDashboardServiceServer struct {
}

func (UnimplementedDashboardServiceServer) GetMasterConfig(context.Context, *MasterConfigRequest) (*MasterConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMasterConfig not implemented")
}
func (UnimplementedDashboardServiceServer) CreateAdminBrins(context.Context, *CreateAdminBrinsRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAdminBrins not implemented")
}
func (UnimplementedDashboardServiceServer) GetAdmins(context.Context, *AdminListRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAdmins not implemented")
}
func (UnimplementedDashboardServiceServer) GetAdmin(context.Context, *AdminRequest) (*AdminResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAdmin not implemented")
}
func (UnimplementedDashboardServiceServer) CreateAdmin(context.Context, *AdminRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAdmin not implemented")
}
func (UnimplementedDashboardServiceServer) UpdateAdmin(context.Context, *AdminRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAdmin not implemented")
}
func (UnimplementedDashboardServiceServer) DeleteAdmin(context.Context, *AdminRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAdmin not implemented")
}
func (UnimplementedDashboardServiceServer) CheckEmailAdmin(context.Context, *AdminRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckEmailAdmin not implemented")
}
func (UnimplementedDashboardServiceServer) CheckPersonalNumberAdmin(context.Context, *AdminRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckPersonalNumberAdmin not implemented")
}
func (UnimplementedDashboardServiceServer) UploadPhotoAdmin(context.Context, *UploadPhotoRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadPhotoAdmin not implemented")
}
func (UnimplementedDashboardServiceServer) RemovePhotoAdmin(context.Context, *AdminRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePhotoAdmin not implemented")
}
func (UnimplementedDashboardServiceServer) Summary(context.Context, *DailySummaryRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Summary not implemented")
}
func (UnimplementedDashboardServiceServer) DailyTable(context.Context, *DailyTableRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DailyTable not implemented")
}
func (UnimplementedDashboardServiceServer) GetKancaFilter(context.Context, *GetFilterRequest) (*DashboardBaseListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetKancaFilter not implemented")
}
func (UnimplementedDashboardServiceServer) GetKanwilFilter(context.Context, *GetFilterRequest) (*DashboardBaseListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetKanwilFilter not implemented")
}
func (UnimplementedDashboardServiceServer) GetAgentFilter(context.Context, *GetFilterRequest) (*DashboardBaseListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAgentFilter not implemented")
}
func (UnimplementedDashboardServiceServer) Download(context.Context, *DownloadRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Download not implemented")
}
func (UnimplementedDashboardServiceServer) ListMenu(context.Context, *DownloadRequest) (*DashboardBaseListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMenu not implemented")
}
func (UnimplementedDashboardServiceServer) GetListPromo(context.Context, *PromoListRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetListPromo not implemented")
}
func (UnimplementedDashboardServiceServer) GetDetailPromo(context.Context, *PromoRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDetailPromo not implemented")
}
func (UnimplementedDashboardServiceServer) CreatePromo(context.Context, *PromoCreateRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePromo not implemented")
}
func (UnimplementedDashboardServiceServer) UpdatePromo(context.Context, *PromoCreateRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePromo not implemented")
}
func (UnimplementedDashboardServiceServer) ChangePicturePromo(context.Context, *PromoImageUpdateRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangePicturePromo not implemented")
}
func (UnimplementedDashboardServiceServer) DeletePromo(context.Context, *PromoRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePromo not implemented")
}
func (UnimplementedDashboardServiceServer) TopRatedAgents(context.Context, *TopRatedAgentsMessage) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TopRatedAgents not implemented")
}
func (UnimplementedDashboardServiceServer) GetListOfficeRole(context.Context, *RoleRequest) (*DashboardBaseListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetListOfficeRole not implemented")
}
func (UnimplementedDashboardServiceServer) GetListRole(context.Context, *RoleRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetListRole not implemented")
}
func (UnimplementedDashboardServiceServer) GetListRoleStatic(context.Context, *RoleRequest) (*DashboardBaseListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetListRoleStatic not implemented")
}
func (UnimplementedDashboardServiceServer) GetDetailRole(context.Context, *RoleRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDetailRole not implemented")
}
func (UnimplementedDashboardServiceServer) CreateRole(context.Context, *RoleCreateRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRole not implemented")
}
func (UnimplementedDashboardServiceServer) UpdateRole(context.Context, *RoleCreateRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRole not implemented")
}
func (UnimplementedDashboardServiceServer) DeleteRole(context.Context, *RoleCreateRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRole not implemented")
}
func (UnimplementedDashboardServiceServer) GetHistoryActivity(context.Context, *HistoryActivityRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHistoryActivity not implemented")
}
func (UnimplementedDashboardServiceServer) GetStatistics(context.Context, *DownloadRequest) (*DashboardBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatistics not implemented")
}
func (UnimplementedDashboardServiceServer) mustEmbedUnimplementedDashboardServiceServer() {}

// UnsafeDashboardServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DashboardServiceServer will
// result in compilation errors.
type UnsafeDashboardServiceServer interface {
	mustEmbedUnimplementedDashboardServiceServer()
}

func RegisterDashboardServiceServer(s grpc.ServiceRegistrar, srv DashboardServiceServer) {
	s.RegisterService(&DashboardService_ServiceDesc, srv)
}

func _DashboardService_GetMasterConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MasterConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).GetMasterConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/GetMasterConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).GetMasterConfig(ctx, req.(*MasterConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_CreateAdminBrins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAdminBrinsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).CreateAdminBrins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/CreateAdminBrins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).CreateAdminBrins(ctx, req.(*CreateAdminBrinsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_GetAdmins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).GetAdmins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/GetAdmins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).GetAdmins(ctx, req.(*AdminListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_GetAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).GetAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/GetAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).GetAdmin(ctx, req.(*AdminRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_CreateAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).CreateAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/CreateAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).CreateAdmin(ctx, req.(*AdminRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_UpdateAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).UpdateAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/UpdateAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).UpdateAdmin(ctx, req.(*AdminRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_DeleteAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).DeleteAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/DeleteAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).DeleteAdmin(ctx, req.(*AdminRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_CheckEmailAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).CheckEmailAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/CheckEmailAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).CheckEmailAdmin(ctx, req.(*AdminRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_CheckPersonalNumberAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).CheckPersonalNumberAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/CheckPersonalNumberAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).CheckPersonalNumberAdmin(ctx, req.(*AdminRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_UploadPhotoAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadPhotoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).UploadPhotoAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/UploadPhotoAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).UploadPhotoAdmin(ctx, req.(*UploadPhotoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_RemovePhotoAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AdminRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).RemovePhotoAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/RemovePhotoAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).RemovePhotoAdmin(ctx, req.(*AdminRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_Summary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DailySummaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).Summary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/Summary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).Summary(ctx, req.(*DailySummaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_DailyTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DailyTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).DailyTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/DailyTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).DailyTable(ctx, req.(*DailyTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_GetKancaFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).GetKancaFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/GetKancaFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).GetKancaFilter(ctx, req.(*GetFilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_GetKanwilFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).GetKanwilFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/GetKanwilFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).GetKanwilFilter(ctx, req.(*GetFilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_GetAgentFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).GetAgentFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/GetAgentFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).GetAgentFilter(ctx, req.(*GetFilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_Download_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).Download(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/Download",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).Download(ctx, req.(*DownloadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_ListMenu_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).ListMenu(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/ListMenu",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).ListMenu(ctx, req.(*DownloadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_GetListPromo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PromoListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).GetListPromo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/GetListPromo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).GetListPromo(ctx, req.(*PromoListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_GetDetailPromo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PromoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).GetDetailPromo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/GetDetailPromo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).GetDetailPromo(ctx, req.(*PromoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_CreatePromo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PromoCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).CreatePromo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/CreatePromo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).CreatePromo(ctx, req.(*PromoCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_UpdatePromo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PromoCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).UpdatePromo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/UpdatePromo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).UpdatePromo(ctx, req.(*PromoCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_ChangePicturePromo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PromoImageUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).ChangePicturePromo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/ChangePicturePromo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).ChangePicturePromo(ctx, req.(*PromoImageUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_DeletePromo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PromoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).DeletePromo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/DeletePromo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).DeletePromo(ctx, req.(*PromoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_TopRatedAgents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopRatedAgentsMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).TopRatedAgents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/TopRatedAgents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).TopRatedAgents(ctx, req.(*TopRatedAgentsMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_GetListOfficeRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).GetListOfficeRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/GetListOfficeRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).GetListOfficeRole(ctx, req.(*RoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_GetListRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).GetListRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/GetListRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).GetListRole(ctx, req.(*RoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_GetListRoleStatic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).GetListRoleStatic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/GetListRoleStatic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).GetListRoleStatic(ctx, req.(*RoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_GetDetailRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).GetDetailRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/GetDetailRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).GetDetailRole(ctx, req.(*RoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_CreateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).CreateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/CreateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).CreateRole(ctx, req.(*RoleCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_UpdateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).UpdateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/UpdateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).UpdateRole(ctx, req.(*RoleCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_DeleteRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).DeleteRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/DeleteRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).DeleteRole(ctx, req.(*RoleCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_GetHistoryActivity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HistoryActivityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).GetHistoryActivity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/GetHistoryActivity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).GetHistoryActivity(ctx, req.(*HistoryActivityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DashboardService_GetStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).GetStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DashboardService/GetStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).GetStatistics(ctx, req.(*DownloadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// DashboardService_ServiceDesc is the grpc.ServiceDesc for DashboardService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DashboardService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.DashboardService",
	HandlerType: (*DashboardServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMasterConfig",
			Handler:    _DashboardService_GetMasterConfig_Handler,
		},
		{
			MethodName: "CreateAdminBrins",
			Handler:    _DashboardService_CreateAdminBrins_Handler,
		},
		{
			MethodName: "GetAdmins",
			Handler:    _DashboardService_GetAdmins_Handler,
		},
		{
			MethodName: "GetAdmin",
			Handler:    _DashboardService_GetAdmin_Handler,
		},
		{
			MethodName: "CreateAdmin",
			Handler:    _DashboardService_CreateAdmin_Handler,
		},
		{
			MethodName: "UpdateAdmin",
			Handler:    _DashboardService_UpdateAdmin_Handler,
		},
		{
			MethodName: "DeleteAdmin",
			Handler:    _DashboardService_DeleteAdmin_Handler,
		},
		{
			MethodName: "CheckEmailAdmin",
			Handler:    _DashboardService_CheckEmailAdmin_Handler,
		},
		{
			MethodName: "CheckPersonalNumberAdmin",
			Handler:    _DashboardService_CheckPersonalNumberAdmin_Handler,
		},
		{
			MethodName: "UploadPhotoAdmin",
			Handler:    _DashboardService_UploadPhotoAdmin_Handler,
		},
		{
			MethodName: "RemovePhotoAdmin",
			Handler:    _DashboardService_RemovePhotoAdmin_Handler,
		},
		{
			MethodName: "Summary",
			Handler:    _DashboardService_Summary_Handler,
		},
		{
			MethodName: "DailyTable",
			Handler:    _DashboardService_DailyTable_Handler,
		},
		{
			MethodName: "GetKancaFilter",
			Handler:    _DashboardService_GetKancaFilter_Handler,
		},
		{
			MethodName: "GetKanwilFilter",
			Handler:    _DashboardService_GetKanwilFilter_Handler,
		},
		{
			MethodName: "GetAgentFilter",
			Handler:    _DashboardService_GetAgentFilter_Handler,
		},
		{
			MethodName: "Download",
			Handler:    _DashboardService_Download_Handler,
		},
		{
			MethodName: "ListMenu",
			Handler:    _DashboardService_ListMenu_Handler,
		},
		{
			MethodName: "GetListPromo",
			Handler:    _DashboardService_GetListPromo_Handler,
		},
		{
			MethodName: "GetDetailPromo",
			Handler:    _DashboardService_GetDetailPromo_Handler,
		},
		{
			MethodName: "CreatePromo",
			Handler:    _DashboardService_CreatePromo_Handler,
		},
		{
			MethodName: "UpdatePromo",
			Handler:    _DashboardService_UpdatePromo_Handler,
		},
		{
			MethodName: "ChangePicturePromo",
			Handler:    _DashboardService_ChangePicturePromo_Handler,
		},
		{
			MethodName: "DeletePromo",
			Handler:    _DashboardService_DeletePromo_Handler,
		},
		{
			MethodName: "TopRatedAgents",
			Handler:    _DashboardService_TopRatedAgents_Handler,
		},
		{
			MethodName: "GetListOfficeRole",
			Handler:    _DashboardService_GetListOfficeRole_Handler,
		},
		{
			MethodName: "GetListRole",
			Handler:    _DashboardService_GetListRole_Handler,
		},
		{
			MethodName: "GetListRoleStatic",
			Handler:    _DashboardService_GetListRoleStatic_Handler,
		},
		{
			MethodName: "GetDetailRole",
			Handler:    _DashboardService_GetDetailRole_Handler,
		},
		{
			MethodName: "CreateRole",
			Handler:    _DashboardService_CreateRole_Handler,
		},
		{
			MethodName: "UpdateRole",
			Handler:    _DashboardService_UpdateRole_Handler,
		},
		{
			MethodName: "DeleteRole",
			Handler:    _DashboardService_DeleteRole_Handler,
		},
		{
			MethodName: "GetHistoryActivity",
			Handler:    _DashboardService_GetHistoryActivity_Handler,
		},
		{
			MethodName: "GetStatistics",
			Handler:    _DashboardService_GetStatistics_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/dashboard.proto",
}
