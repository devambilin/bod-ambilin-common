// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: proto/dashboard.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RoleCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string      `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string      `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	RoleId           int32       `protobuf:"varint,3,opt,name=roleId,proto3" json:"roleId,omitempty"`
	RoleName         string      `protobuf:"bytes,4,opt,name=roleName,proto3" json:"roleName,omitempty"`
	ListRoleMenu     []*DataMenu `protobuf:"bytes,5,rep,name=listRoleMenu,proto3" json:"listRoleMenu,omitempty"`
	UserId           string      `protobuf:"bytes,6,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *RoleCreateRequest) Reset() {
	*x = RoleCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleCreateRequest) ProtoMessage() {}

func (x *RoleCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleCreateRequest.ProtoReflect.Descriptor instead.
func (*RoleCreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{0}
}

func (x *RoleCreateRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RoleCreateRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *RoleCreateRequest) GetRoleId() int32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RoleCreateRequest) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RoleCreateRequest) GetListRoleMenu() []*DataMenu {
	if x != nil {
		return x.ListRoleMenu
	}
	return nil
}

func (x *RoleCreateRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DataMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId      int32  `protobuf:"varint,1,opt,name=menuId,proto3" json:"menuId,omitempty"`
	SubmenuId   int32  `protobuf:"varint,2,opt,name=submenuId,proto3" json:"submenuId,omitempty"`
	MenuName    string `protobuf:"bytes,3,opt,name=menuName,proto3" json:"menuName,omitempty"`
	SumbenuName string `protobuf:"bytes,4,opt,name=sumbenuName,proto3" json:"sumbenuName,omitempty"`
	IsSubMenu   bool   `protobuf:"varint,5,opt,name=isSubMenu,proto3" json:"isSubMenu,omitempty"`
	IsRead      bool   `protobuf:"varint,6,opt,name=isRead,proto3" json:"isRead,omitempty"`
	IsCreate    bool   `protobuf:"varint,7,opt,name=isCreate,proto3" json:"isCreate,omitempty"`
	IsDelete    bool   `protobuf:"varint,8,opt,name=isDelete,proto3" json:"isDelete,omitempty"`
	IsUpdate    bool   `protobuf:"varint,9,opt,name=isUpdate,proto3" json:"isUpdate,omitempty"`
}

func (x *DataMenu) Reset() {
	*x = DataMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMenu) ProtoMessage() {}

func (x *DataMenu) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMenu.ProtoReflect.Descriptor instead.
func (*DataMenu) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{1}
}

func (x *DataMenu) GetMenuId() int32 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *DataMenu) GetSubmenuId() int32 {
	if x != nil {
		return x.SubmenuId
	}
	return 0
}

func (x *DataMenu) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *DataMenu) GetSumbenuName() string {
	if x != nil {
		return x.SumbenuName
	}
	return ""
}

func (x *DataMenu) GetIsSubMenu() bool {
	if x != nil {
		return x.IsSubMenu
	}
	return false
}

func (x *DataMenu) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *DataMenu) GetIsCreate() bool {
	if x != nil {
		return x.IsCreate
	}
	return false
}

func (x *DataMenu) GetIsDelete() bool {
	if x != nil {
		return x.IsDelete
	}
	return false
}

func (x *DataMenu) GetIsUpdate() bool {
	if x != nil {
		return x.IsUpdate
	}
	return false
}

type RoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	Keyword          string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Page             int32  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Limit            int32  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	RoleId           string `protobuf:"bytes,6,opt,name=roleId,proto3" json:"roleId,omitempty"`
	UserId           string `protobuf:"bytes,7,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *RoleRequest) Reset() {
	*x = RoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleRequest) ProtoMessage() {}

func (x *RoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleRequest.ProtoReflect.Descriptor instead.
func (*RoleRequest) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{2}
}

func (x *RoleRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RoleRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *RoleRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *RoleRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RoleRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RoleRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *RoleRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type TopRatedAgentsMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	StartDate        int64  `protobuf:"varint,3,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate          int64  `protobuf:"varint,4,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Page             int32  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Limit            int32  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	KancaId          int32  `protobuf:"varint,7,opt,name=kancaId,proto3" json:"kancaId,omitempty"`
	KanwilId         int32  `protobuf:"varint,8,opt,name=kanwilId,proto3" json:"kanwilId,omitempty"`
	Status           string `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *TopRatedAgentsMessage) Reset() {
	*x = TopRatedAgentsMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopRatedAgentsMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopRatedAgentsMessage) ProtoMessage() {}

func (x *TopRatedAgentsMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopRatedAgentsMessage.ProtoReflect.Descriptor instead.
func (*TopRatedAgentsMessage) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{3}
}

func (x *TopRatedAgentsMessage) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *TopRatedAgentsMessage) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *TopRatedAgentsMessage) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *TopRatedAgentsMessage) GetEndDate() int64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *TopRatedAgentsMessage) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *TopRatedAgentsMessage) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TopRatedAgentsMessage) GetKancaId() int32 {
	if x != nil {
		return x.KancaId
	}
	return 0
}

func (x *TopRatedAgentsMessage) GetKanwilId() int32 {
	if x != nil {
		return x.KanwilId
	}
	return 0
}

func (x *TopRatedAgentsMessage) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type PromoImageUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	PromoId          string `protobuf:"bytes,3,opt,name=promoId,proto3" json:"promoId,omitempty"`
	ImageUrl         string `protobuf:"bytes,4,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	AdminId          string `protobuf:"bytes,5,opt,name=adminId,proto3" json:"adminId,omitempty"`
}

func (x *PromoImageUpdateRequest) Reset() {
	*x = PromoImageUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromoImageUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoImageUpdateRequest) ProtoMessage() {}

func (x *PromoImageUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoImageUpdateRequest.ProtoReflect.Descriptor instead.
func (*PromoImageUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{4}
}

func (x *PromoImageUpdateRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *PromoImageUpdateRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *PromoImageUpdateRequest) GetPromoId() string {
	if x != nil {
		return x.PromoId
	}
	return ""
}

func (x *PromoImageUpdateRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *PromoImageUpdateRequest) GetAdminId() string {
	if x != nil {
		return x.AdminId
	}
	return ""
}

type PromoListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	Keyword          string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	StartDate        string `protobuf:"bytes,4,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate          string `protobuf:"bytes,5,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Page             int32  `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	Limit            int32  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *PromoListRequest) Reset() {
	*x = PromoListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromoListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoListRequest) ProtoMessage() {}

func (x *PromoListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoListRequest.ProtoReflect.Descriptor instead.
func (*PromoListRequest) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{5}
}

func (x *PromoListRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *PromoListRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *PromoListRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *PromoListRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *PromoListRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *PromoListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PromoListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type PromoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	PromoId          string `protobuf:"bytes,3,opt,name=promoId,proto3" json:"promoId,omitempty"`
}

func (x *PromoRequest) Reset() {
	*x = PromoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoRequest) ProtoMessage() {}

func (x *PromoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoRequest.ProtoReflect.Descriptor instead.
func (*PromoRequest) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{6}
}

func (x *PromoRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *PromoRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *PromoRequest) GetPromoId() string {
	if x != nil {
		return x.PromoId
	}
	return ""
}

type PromoCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	PromoId          string `protobuf:"bytes,3,opt,name=promoId,proto3" json:"promoId,omitempty"`
	StartDate        string `protobuf:"bytes,4,opt,name=startDate,proto3" json:"startDate,omitempty"`
	ExpireDate       string `protobuf:"bytes,5,opt,name=expireDate,proto3" json:"expireDate,omitempty"`
	Position         int32  `protobuf:"varint,6,opt,name=position,proto3" json:"position,omitempty"`
	Status           bool   `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	Title            string `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`
	Description      string `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	AdminId          string `protobuf:"bytes,10,opt,name=adminId,proto3" json:"adminId,omitempty"`
}

func (x *PromoCreateRequest) Reset() {
	*x = PromoCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromoCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoCreateRequest) ProtoMessage() {}

func (x *PromoCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoCreateRequest.ProtoReflect.Descriptor instead.
func (*PromoCreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{7}
}

func (x *PromoCreateRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *PromoCreateRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *PromoCreateRequest) GetPromoId() string {
	if x != nil {
		return x.PromoId
	}
	return ""
}

func (x *PromoCreateRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *PromoCreateRequest) GetExpireDate() string {
	if x != nil {
		return x.ExpireDate
	}
	return ""
}

func (x *PromoCreateRequest) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *PromoCreateRequest) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *PromoCreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PromoCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PromoCreateRequest) GetAdminId() string {
	if x != nil {
		return x.AdminId
	}
	return ""
}

type MasterConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string            `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string            `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	MasterConfig     *DataMasterConfig `protobuf:"bytes,3,opt,name=masterConfig,proto3" json:"masterConfig,omitempty"`
}

func (x *MasterConfigRequest) Reset() {
	*x = MasterConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterConfigRequest) ProtoMessage() {}

func (x *MasterConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterConfigRequest.ProtoReflect.Descriptor instead.
func (*MasterConfigRequest) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{8}
}

func (x *MasterConfigRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *MasterConfigRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *MasterConfigRequest) GetMasterConfig() *DataMasterConfig {
	if x != nil {
		return x.MasterConfig
	}
	return nil
}

type DownloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	StartDate        int64  `protobuf:"varint,3,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate          int64  `protobuf:"varint,4,opt,name=endDate,proto3" json:"endDate,omitempty"`
	AgentId          string `protobuf:"bytes,5,opt,name=agentId,proto3" json:"agentId,omitempty"`
	KancaId          int32  `protobuf:"varint,6,opt,name=kancaId,proto3" json:"kancaId,omitempty"`
	KanwilId         int32  `protobuf:"varint,7,opt,name=kanwilId,proto3" json:"kanwilId,omitempty"`
	Menu             string `protobuf:"bytes,8,opt,name=menu,proto3" json:"menu,omitempty"`
	Keyword          string `protobuf:"bytes,9,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Offset           int32  `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit            int32  `protobuf:"varint,11,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *DownloadRequest) Reset() {
	*x = DownloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadRequest) ProtoMessage() {}

func (x *DownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadRequest.ProtoReflect.Descriptor instead.
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{9}
}

func (x *DownloadRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *DownloadRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *DownloadRequest) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *DownloadRequest) GetEndDate() int64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *DownloadRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *DownloadRequest) GetKancaId() int32 {
	if x != nil {
		return x.KancaId
	}
	return 0
}

func (x *DownloadRequest) GetKanwilId() int32 {
	if x != nil {
		return x.KanwilId
	}
	return 0
}

func (x *DownloadRequest) GetMenu() string {
	if x != nil {
		return x.Menu
	}
	return ""
}

func (x *DownloadRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *DownloadRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DownloadRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type DownloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           int32           `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message          string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId        string          `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string          `protobuf:"bytes,4,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	Filename         string          `protobuf:"bytes,5,opt,name=filename,proto3" json:"filename,omitempty"`
	DataDownload     []*DataDownload `protobuf:"bytes,6,rep,name=dataDownload,proto3" json:"dataDownload,omitempty"`
}

func (x *DownloadResponse) Reset() {
	*x = DownloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadResponse) ProtoMessage() {}

func (x *DownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadResponse.ProtoReflect.Descriptor instead.
func (*DownloadResponse) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{10}
}

func (x *DownloadResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DownloadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DownloadResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *DownloadResponse) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *DownloadResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *DownloadResponse) GetDataDownload() []*DataDownload {
	if x != nil {
		return x.DataDownload
	}
	return nil
}

type DataDownload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string  `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	OrderCode          string  `protobuf:"bytes,2,opt,name=orderCode,proto3" json:"orderCode,omitempty"`
	NasabahId          string  `protobuf:"bytes,3,opt,name=nasabahId,proto3" json:"nasabahId,omitempty"`
	NasabahCode        string  `protobuf:"bytes,4,opt,name=nasabahCode,proto3" json:"nasabahCode,omitempty"`
	NasabahName        string  `protobuf:"bytes,5,opt,name=nasabahName,proto3" json:"nasabahName,omitempty"`
	NasabahPhone       string  `protobuf:"bytes,6,opt,name=nasabahPhone,proto3" json:"nasabahPhone,omitempty"`
	NasabahAddress     string  `protobuf:"bytes,7,opt,name=nasabahAddress,proto3" json:"nasabahAddress,omitempty"`
	UserLat            float32 `protobuf:"fixed32,8,opt,name=userLat,proto3" json:"userLat,omitempty"`
	UserLong           float32 `protobuf:"fixed32,9,opt,name=userLong,proto3" json:"userLong,omitempty"`
	NasabahStatus      string  `protobuf:"bytes,10,opt,name=nasabahStatus,proto3" json:"nasabahStatus,omitempty"`
	AgentId            string  `protobuf:"bytes,11,opt,name=agentId,proto3" json:"agentId,omitempty"`
	AgentName          string  `protobuf:"bytes,12,opt,name=agentName,proto3" json:"agentName,omitempty"`
	AgentAddress       string  `protobuf:"bytes,13,opt,name=agentAddress,proto3" json:"agentAddress,omitempty"`
	AgentMid           string  `protobuf:"bytes,14,opt,name=agentMid,proto3" json:"agentMid,omitempty"`
	KanwilId           int64   `protobuf:"varint,15,opt,name=kanwilId,proto3" json:"kanwilId,omitempty"`
	KanwilName         string  `protobuf:"bytes,16,opt,name=kanwilName,proto3" json:"kanwilName,omitempty"`
	KanwilIsRemoved    bool    `protobuf:"varint,17,opt,name=kanwilIsRemoved,proto3" json:"kanwilIsRemoved,omitempty"`
	KancaId            int64   `protobuf:"varint,18,opt,name=kancaId,proto3" json:"kancaId,omitempty"`
	KancaName          string  `protobuf:"bytes,19,opt,name=kancaName,proto3" json:"kancaName,omitempty"`
	KancaIsRemoved     bool    `protobuf:"varint,20,opt,name=kancaIsRemoved,proto3" json:"kancaIsRemoved,omitempty"`
	NominalDeposit     float32 `protobuf:"fixed32,21,opt,name=nominalDeposit,proto3" json:"nominalDeposit,omitempty"`
	ShippingFee        float32 `protobuf:"fixed32,22,opt,name=shippingFee,proto3" json:"shippingFee,omitempty"`
	CostOrder          float32 `protobuf:"fixed32,23,opt,name=costOrder,proto3" json:"costOrder,omitempty"`
	OrderType          string  `protobuf:"bytes,24,opt,name=orderType,proto3" json:"orderType,omitempty"`
	ProgressPickup     int32   `protobuf:"varint,25,opt,name=progressPickup,proto3" json:"progressPickup,omitempty"`
	OrderLater         string  `protobuf:"bytes,26,opt,name=orderLater,proto3" json:"orderLater,omitempty"`
	OrderStatusNasabah int32   `protobuf:"varint,27,opt,name=orderStatusNasabah,proto3" json:"orderStatusNasabah,omitempty"`
	OrderStatusAgent   int32   `protobuf:"varint,28,opt,name=orderStatusAgent,proto3" json:"orderStatusAgent,omitempty"`
	ExpiredTime        string  `protobuf:"bytes,29,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
	CompletedTime      string  `protobuf:"bytes,30,opt,name=completedTime,proto3" json:"completedTime,omitempty"`
	CreatedTime        string  `protobuf:"bytes,31,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	UpdatedTime        string  `protobuf:"bytes,32,opt,name=updatedTime,proto3" json:"updatedTime,omitempty"`
	OrderFinish        string  `protobuf:"bytes,33,opt,name=orderFinish,proto3" json:"orderFinish,omitempty"`
	UserType           string  `protobuf:"bytes,34,opt,name=userType,proto3" json:"userType,omitempty"`
	GuarantorName      string  `protobuf:"bytes,35,opt,name=guarantorName,proto3" json:"guarantorName,omitempty"`
	AgentVehicleCode   string  `protobuf:"bytes,36,opt,name=agentVehicleCode,proto3" json:"agentVehicleCode,omitempty"`
	Insurance          float32 `protobuf:"fixed32,37,opt,name=insurance,proto3" json:"insurance,omitempty"`
	FeeAdmin           string  `protobuf:"bytes,38,opt,name=feeAdmin,proto3" json:"feeAdmin,omitempty"`
	Distance           string  `protobuf:"bytes,39,opt,name=distance,proto3" json:"distance,omitempty"`
	StatusMessage      string  `protobuf:"bytes,40,opt,name=statusMessage,proto3" json:"statusMessage,omitempty"`
}

func (x *DataDownload) Reset() {
	*x = DataDownload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataDownload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataDownload) ProtoMessage() {}

func (x *DataDownload) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataDownload.ProtoReflect.Descriptor instead.
func (*DataDownload) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{11}
}

func (x *DataDownload) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DataDownload) GetOrderCode() string {
	if x != nil {
		return x.OrderCode
	}
	return ""
}

func (x *DataDownload) GetNasabahId() string {
	if x != nil {
		return x.NasabahId
	}
	return ""
}

func (x *DataDownload) GetNasabahCode() string {
	if x != nil {
		return x.NasabahCode
	}
	return ""
}

func (x *DataDownload) GetNasabahName() string {
	if x != nil {
		return x.NasabahName
	}
	return ""
}

func (x *DataDownload) GetNasabahPhone() string {
	if x != nil {
		return x.NasabahPhone
	}
	return ""
}

func (x *DataDownload) GetNasabahAddress() string {
	if x != nil {
		return x.NasabahAddress
	}
	return ""
}

func (x *DataDownload) GetUserLat() float32 {
	if x != nil {
		return x.UserLat
	}
	return 0
}

func (x *DataDownload) GetUserLong() float32 {
	if x != nil {
		return x.UserLong
	}
	return 0
}

func (x *DataDownload) GetNasabahStatus() string {
	if x != nil {
		return x.NasabahStatus
	}
	return ""
}

func (x *DataDownload) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *DataDownload) GetAgentName() string {
	if x != nil {
		return x.AgentName
	}
	return ""
}

func (x *DataDownload) GetAgentAddress() string {
	if x != nil {
		return x.AgentAddress
	}
	return ""
}

func (x *DataDownload) GetAgentMid() string {
	if x != nil {
		return x.AgentMid
	}
	return ""
}

func (x *DataDownload) GetKanwilId() int64 {
	if x != nil {
		return x.KanwilId
	}
	return 0
}

func (x *DataDownload) GetKanwilName() string {
	if x != nil {
		return x.KanwilName
	}
	return ""
}

func (x *DataDownload) GetKanwilIsRemoved() bool {
	if x != nil {
		return x.KanwilIsRemoved
	}
	return false
}

func (x *DataDownload) GetKancaId() int64 {
	if x != nil {
		return x.KancaId
	}
	return 0
}

func (x *DataDownload) GetKancaName() string {
	if x != nil {
		return x.KancaName
	}
	return ""
}

func (x *DataDownload) GetKancaIsRemoved() bool {
	if x != nil {
		return x.KancaIsRemoved
	}
	return false
}

func (x *DataDownload) GetNominalDeposit() float32 {
	if x != nil {
		return x.NominalDeposit
	}
	return 0
}

func (x *DataDownload) GetShippingFee() float32 {
	if x != nil {
		return x.ShippingFee
	}
	return 0
}

func (x *DataDownload) GetCostOrder() float32 {
	if x != nil {
		return x.CostOrder
	}
	return 0
}

func (x *DataDownload) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *DataDownload) GetProgressPickup() int32 {
	if x != nil {
		return x.ProgressPickup
	}
	return 0
}

func (x *DataDownload) GetOrderLater() string {
	if x != nil {
		return x.OrderLater
	}
	return ""
}

func (x *DataDownload) GetOrderStatusNasabah() int32 {
	if x != nil {
		return x.OrderStatusNasabah
	}
	return 0
}

func (x *DataDownload) GetOrderStatusAgent() int32 {
	if x != nil {
		return x.OrderStatusAgent
	}
	return 0
}

func (x *DataDownload) GetExpiredTime() string {
	if x != nil {
		return x.ExpiredTime
	}
	return ""
}

func (x *DataDownload) GetCompletedTime() string {
	if x != nil {
		return x.CompletedTime
	}
	return ""
}

func (x *DataDownload) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *DataDownload) GetUpdatedTime() string {
	if x != nil {
		return x.UpdatedTime
	}
	return ""
}

func (x *DataDownload) GetOrderFinish() string {
	if x != nil {
		return x.OrderFinish
	}
	return ""
}

func (x *DataDownload) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *DataDownload) GetGuarantorName() string {
	if x != nil {
		return x.GuarantorName
	}
	return ""
}

func (x *DataDownload) GetAgentVehicleCode() string {
	if x != nil {
		return x.AgentVehicleCode
	}
	return ""
}

func (x *DataDownload) GetInsurance() float32 {
	if x != nil {
		return x.Insurance
	}
	return 0
}

func (x *DataDownload) GetFeeAdmin() string {
	if x != nil {
		return x.FeeAdmin
	}
	return ""
}

func (x *DataDownload) GetDistance() string {
	if x != nil {
		return x.Distance
	}
	return ""
}

func (x *DataDownload) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

type GetFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	Keyword          string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	KancaId          string `protobuf:"bytes,4,opt,name=kancaId,proto3" json:"kancaId,omitempty"`
	KanwilId         string `protobuf:"bytes,5,opt,name=kanwilId,proto3" json:"kanwilId,omitempty"`
	AgentId          string `protobuf:"bytes,6,opt,name=agentId,proto3" json:"agentId,omitempty"`
}

func (x *GetFilterRequest) Reset() {
	*x = GetFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilterRequest) ProtoMessage() {}

func (x *GetFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilterRequest.ProtoReflect.Descriptor instead.
func (*GetFilterRequest) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{12}
}

func (x *GetFilterRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *GetFilterRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *GetFilterRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *GetFilterRequest) GetKancaId() string {
	if x != nil {
		return x.KancaId
	}
	return ""
}

func (x *GetFilterRequest) GetKanwilId() string {
	if x != nil {
		return x.KanwilId
	}
	return ""
}

func (x *GetFilterRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

type HistoryActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	Keyword          string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	ChannelCode      string `protobuf:"bytes,4,opt,name=channelCode,proto3" json:"channelCode,omitempty"`
	Page             int32  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Limit            int32  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *HistoryActivityRequest) Reset() {
	*x = HistoryActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryActivityRequest) ProtoMessage() {}

func (x *HistoryActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryActivityRequest.ProtoReflect.Descriptor instead.
func (*HistoryActivityRequest) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{13}
}

func (x *HistoryActivityRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *HistoryActivityRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *HistoryActivityRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *HistoryActivityRequest) GetChannelCode() string {
	if x != nil {
		return x.ChannelCode
	}
	return ""
}

func (x *HistoryActivityRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *HistoryActivityRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type UploadPhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	PhotoUrl         string `protobuf:"bytes,4,opt,name=photoUrl,proto3" json:"photoUrl,omitempty"`
	AdminId          string `protobuf:"bytes,5,opt,name=adminId,proto3" json:"adminId,omitempty"`
}

func (x *UploadPhotoRequest) Reset() {
	*x = UploadPhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPhotoRequest) ProtoMessage() {}

func (x *UploadPhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPhotoRequest.ProtoReflect.Descriptor instead.
func (*UploadPhotoRequest) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{14}
}

func (x *UploadPhotoRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *UploadPhotoRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *UploadPhotoRequest) GetPhotoUrl() string {
	if x != nil {
		return x.PhotoUrl
	}
	return ""
}

func (x *UploadPhotoRequest) GetAdminId() string {
	if x != nil {
		return x.AdminId
	}
	return ""
}

type CreateAdminBrinsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email          string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	PersonalNumber string `protobuf:"bytes,3,opt,name=personalNumber,proto3" json:"personalNumber,omitempty"`
	Password       string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *CreateAdminBrinsRequest) Reset() {
	*x = CreateAdminBrinsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAdminBrinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAdminBrinsRequest) ProtoMessage() {}

func (x *CreateAdminBrinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAdminBrinsRequest.ProtoReflect.Descriptor instead.
func (*CreateAdminBrinsRequest) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{15}
}

func (x *CreateAdminBrinsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAdminBrinsRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateAdminBrinsRequest) GetPersonalNumber() string {
	if x != nil {
		return x.PersonalNumber
	}
	return ""
}

func (x *CreateAdminBrinsRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type BaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	AdminId          string `protobuf:"bytes,3,opt,name=adminId,proto3" json:"adminId,omitempty"`
}

func (x *BaseRequest) Reset() {
	*x = BaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseRequest) ProtoMessage() {}

func (x *BaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseRequest.ProtoReflect.Descriptor instead.
func (*BaseRequest) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{16}
}

func (x *BaseRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *BaseRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *BaseRequest) GetAdminId() string {
	if x != nil {
		return x.AdminId
	}
	return ""
}

type MasterConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           int32               `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message          string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId        string              `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string              `protobuf:"bytes,4,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	DataMasterConfig *DataMasterConfig   `protobuf:"bytes,5,opt,name=dataMasterConfig,proto3" json:"dataMasterConfig,omitempty"`
	ListMasterConfig []*DataMasterConfig `protobuf:"bytes,6,rep,name=listMasterConfig,proto3" json:"listMasterConfig,omitempty"`
}

func (x *MasterConfigResponse) Reset() {
	*x = MasterConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterConfigResponse) ProtoMessage() {}

func (x *MasterConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterConfigResponse.ProtoReflect.Descriptor instead.
func (*MasterConfigResponse) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{17}
}

func (x *MasterConfigResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MasterConfigResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MasterConfigResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *MasterConfigResponse) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *MasterConfigResponse) GetDataMasterConfig() *DataMasterConfig {
	if x != nil {
		return x.DataMasterConfig
	}
	return nil
}

func (x *MasterConfigResponse) GetListMasterConfig() []*DataMasterConfig {
	if x != nil {
		return x.ListMasterConfig
	}
	return nil
}

type DataMasterConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ParamKey   string `protobuf:"bytes,2,opt,name=paramKey,proto3" json:"paramKey,omitempty"`
	ParamValue string `protobuf:"bytes,3,opt,name=paramValue,proto3" json:"paramValue,omitempty"`
}

func (x *DataMasterConfig) Reset() {
	*x = DataMasterConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMasterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMasterConfig) ProtoMessage() {}

func (x *DataMasterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMasterConfig.ProtoReflect.Descriptor instead.
func (*DataMasterConfig) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{18}
}

func (x *DataMasterConfig) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DataMasterConfig) GetParamKey() string {
	if x != nil {
		return x.ParamKey
	}
	return ""
}

func (x *DataMasterConfig) GetParamValue() string {
	if x != nil {
		return x.ParamValue
	}
	return ""
}

type DailySummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	Date             string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *DailySummaryRequest) Reset() {
	*x = DailySummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailySummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailySummaryRequest) ProtoMessage() {}

func (x *DailySummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailySummaryRequest.ProtoReflect.Descriptor instead.
func (*DailySummaryRequest) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{19}
}

func (x *DailySummaryRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *DailySummaryRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *DailySummaryRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type DailyTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	Date             string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Keyword          string `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,omitempty"`
	KanwilId         int32  `protobuf:"varint,5,opt,name=kanwilId,proto3" json:"kanwilId,omitempty"`
	KancaId          int32  `protobuf:"varint,6,opt,name=kancaId,proto3" json:"kancaId,omitempty"`
	Page             int32  `protobuf:"varint,7,opt,name=page,proto3" json:"page,omitempty"`
	Limit            int32  `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	Status           string `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DailyTableRequest) Reset() {
	*x = DailyTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyTableRequest) ProtoMessage() {}

func (x *DailyTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyTableRequest.ProtoReflect.Descriptor instead.
func (*DailyTableRequest) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{20}
}

func (x *DailyTableRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *DailyTableRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *DailyTableRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *DailyTableRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *DailyTableRequest) GetKanwilId() int32 {
	if x != nil {
		return x.KanwilId
	}
	return 0
}

func (x *DailyTableRequest) GetKancaId() int32 {
	if x != nil {
		return x.KancaId
	}
	return 0
}

func (x *DailyTableRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DailyTableRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DailyTableRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type AdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string     `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string     `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	Admin            *DataAdmin `protobuf:"bytes,3,opt,name=admin,proto3" json:"admin,omitempty"`
}

func (x *AdminRequest) Reset() {
	*x = AdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminRequest) ProtoMessage() {}

func (x *AdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminRequest.ProtoReflect.Descriptor instead.
func (*AdminRequest) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{21}
}

func (x *AdminRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AdminRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *AdminRequest) GetAdmin() *DataAdmin {
	if x != nil {
		return x.Admin
	}
	return nil
}

type AdminListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId        string `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string `protobuf:"bytes,2,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	Keyword          string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Page             int32  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Limit            int32  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	KanwilId         int32  `protobuf:"varint,6,opt,name=kanwilId,proto3" json:"kanwilId,omitempty"`
}

func (x *AdminListRequest) Reset() {
	*x = AdminListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminListRequest) ProtoMessage() {}

func (x *AdminListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminListRequest.ProtoReflect.Descriptor instead.
func (*AdminListRequest) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{22}
}

func (x *AdminListRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AdminListRequest) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *AdminListRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *AdminListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AdminListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AdminListRequest) GetKanwilId() int32 {
	if x != nil {
		return x.KanwilId
	}
	return 0
}

type AdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           int32        `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message          string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId        string       `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string       `protobuf:"bytes,4,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	DataAdmin        *DataAdmin   `protobuf:"bytes,5,opt,name=dataAdmin,proto3" json:"dataAdmin,omitempty"`
	ListAdmin        []*DataAdmin `protobuf:"bytes,6,rep,name=listAdmin,proto3" json:"listAdmin,omitempty"`
}

func (x *AdminResponse) Reset() {
	*x = AdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminResponse) ProtoMessage() {}

func (x *AdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminResponse.ProtoReflect.Descriptor instead.
func (*AdminResponse) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{23}
}

func (x *AdminResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AdminResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AdminResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AdminResponse) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *AdminResponse) GetDataAdmin() *DataAdmin {
	if x != nil {
		return x.DataAdmin
	}
	return nil
}

func (x *AdminResponse) GetListAdmin() []*DataAdmin {
	if x != nil {
		return x.ListAdmin
	}
	return nil
}

type DashboardBaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           int32            `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message          string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId        string           `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string           `protobuf:"bytes,4,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	Data             *structpb.Struct `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DashboardBaseResponse) Reset() {
	*x = DashboardBaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashboardBaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardBaseResponse) ProtoMessage() {}

func (x *DashboardBaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardBaseResponse.ProtoReflect.Descriptor instead.
func (*DashboardBaseResponse) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{24}
}

func (x *DashboardBaseResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DashboardBaseResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DashboardBaseResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *DashboardBaseResponse) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *DashboardBaseResponse) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type DashboardBaseListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           int32               `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message          string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RequestId        string              `protobuf:"bytes,3,opt,name=requestId,proto3" json:"requestId,omitempty"`
	RequestByService string              `protobuf:"bytes,4,opt,name=requestByService,proto3" json:"requestByService,omitempty"`
	Data             *structpb.ListValue `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DashboardBaseListResponse) Reset() {
	*x = DashboardBaseListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashboardBaseListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardBaseListResponse) ProtoMessage() {}

func (x *DashboardBaseListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardBaseListResponse.ProtoReflect.Descriptor instead.
func (*DashboardBaseListResponse) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{25}
}

func (x *DashboardBaseListResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DashboardBaseListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DashboardBaseListResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *DashboardBaseListResponse) GetRequestByService() string {
	if x != nil {
		return x.RequestByService
	}
	return ""
}

func (x *DashboardBaseListResponse) GetData() *structpb.ListValue {
	if x != nil {
		return x.Data
	}
	return nil
}

type DataAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created          int64  `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Updated          int64  `protobuf:"varint,2,opt,name=updated,proto3" json:"updated,omitempty"`
	Removed          int64  `protobuf:"varint,3,opt,name=removed,proto3" json:"removed,omitempty"`
	CreatedBy        string `protobuf:"bytes,4,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	UpdatedBy        string `protobuf:"bytes,5,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	Id               string `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
	UserId           string `protobuf:"bytes,7,opt,name=userId,proto3" json:"userId,omitempty"`
	Name             string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Address          string `protobuf:"bytes,9,opt,name=address,proto3" json:"address,omitempty"`
	Email            string `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`
	Password         string `protobuf:"bytes,11,opt,name=password,proto3" json:"password,omitempty"`
	Phone            string `protobuf:"bytes,12,opt,name=phone,proto3" json:"phone,omitempty"`
	PhotoUrl         string `protobuf:"bytes,13,opt,name=photoUrl,proto3" json:"photoUrl,omitempty"`
	AccessId         string `protobuf:"bytes,14,opt,name=accessId,proto3" json:"accessId,omitempty"`
	ResetCode        string `protobuf:"bytes,15,opt,name=resetCode,proto3" json:"resetCode,omitempty"`
	ResetExpiredTime int64  `protobuf:"varint,16,opt,name=resetExpiredTime,proto3" json:"resetExpiredTime,omitempty"`
	IdOfficeRegional int32  `protobuf:"varint,17,opt,name=idOfficeRegional,proto3" json:"idOfficeRegional,omitempty"`
	PersonalNumber   string `protobuf:"bytes,18,opt,name=personalNumber,proto3" json:"personalNumber,omitempty"`
	IsSuperAdmin     bool   `protobuf:"varint,19,opt,name=isSuperAdmin,proto3" json:"isSuperAdmin,omitempty"`
	Role             string `protobuf:"bytes,20,opt,name=role,proto3" json:"role,omitempty"`
	RoleId           int32  `protobuf:"varint,21,opt,name=roleId,proto3" json:"roleId,omitempty"`
	KanwilId         string `protobuf:"bytes,22,opt,name=kanwilId,proto3" json:"kanwilId,omitempty"`
}

func (x *DataAdmin) Reset() {
	*x = DataAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dashboard_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataAdmin) ProtoMessage() {}

func (x *DataAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dashboard_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataAdmin.ProtoReflect.Descriptor instead.
func (*DataAdmin) Descriptor() ([]byte, []int) {
	return file_proto_dashboard_proto_rawDescGZIP(), []int{26}
}

func (x *DataAdmin) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *DataAdmin) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *DataAdmin) GetRemoved() int64 {
	if x != nil {
		return x.Removed
	}
	return 0
}

func (x *DataAdmin) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *DataAdmin) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *DataAdmin) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DataAdmin) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DataAdmin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataAdmin) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DataAdmin) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DataAdmin) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *DataAdmin) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *DataAdmin) GetPhotoUrl() string {
	if x != nil {
		return x.PhotoUrl
	}
	return ""
}

func (x *DataAdmin) GetAccessId() string {
	if x != nil {
		return x.AccessId
	}
	return ""
}

func (x *DataAdmin) GetResetCode() string {
	if x != nil {
		return x.ResetCode
	}
	return ""
}

func (x *DataAdmin) GetResetExpiredTime() int64 {
	if x != nil {
		return x.ResetExpiredTime
	}
	return 0
}

func (x *DataAdmin) GetIdOfficeRegional() int32 {
	if x != nil {
		return x.IdOfficeRegional
	}
	return 0
}

func (x *DataAdmin) GetPersonalNumber() string {
	if x != nil {
		return x.PersonalNumber
	}
	return ""
}

func (x *DataAdmin) GetIsSuperAdmin() bool {
	if x != nil {
		return x.IsSuperAdmin
	}
	return false
}

func (x *DataAdmin) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *DataAdmin) GetRoleId() int32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *DataAdmin) GetKanwilId() string {
	if x != nil {
		return x.KanwilId
	}
	return ""
}

var File_proto_dashboard_proto protoreflect.FileDescriptor

var file_proto_dashboard_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xde, 0x01, 0x0a,
	0x11, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x33, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x88, 0x02,
	0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65,
	0x6e, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x75, 0x6d, 0x62, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x75, 0x6d, 0x62, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x73, 0x53, 0x75, 0x62, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x62, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73,
	0x52, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x0b, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x91, 0x02, 0x0a, 0x15, 0x54, 0x6f, 0x70, 0x52, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6b, 0x61, 0x6e, 0x63, 0x61, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6b,
	0x61, 0x6e, 0x63, 0x61, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x61, 0x6e, 0x77, 0x69, 0x6c,
	0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6b, 0x61, 0x6e, 0x77, 0x69, 0x6c,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb3, 0x01, 0x0a, 0x17, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64,
	0x22, 0xd8, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x72, 0x0a, 0x0c, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x49, 0x64, 0x22,
	0xbc, 0x02, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x9c,
	0x01, 0x0a, 0x13, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x3b, 0x0a, 0x0c, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x0c, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xbf, 0x02,
	0x0a, 0x0f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x6b, 0x61, 0x6e, 0x63, 0x61, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x6b, 0x61, 0x6e, 0x63, 0x61, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x61, 0x6e, 0x77, 0x69,
	0x6c, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6b, 0x61, 0x6e, 0x77, 0x69,
	0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0xe3, 0x01, 0x0a, 0x10, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0c,
	0x64, 0x61, 0x74, 0x61, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xc6, 0x0a, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x73, 0x61, 0x62,
	0x61, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x61, 0x73, 0x61, 0x62, 0x61,
	0x68, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x61,
	0x73, 0x61, 0x62, 0x61, 0x68, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x61,
	0x73, 0x61, 0x62, 0x61, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x61, 0x73, 0x61,
	0x62, 0x61, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x4d, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x4d, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x61, 0x6e, 0x77, 0x69, 0x6c,
	0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6b, 0x61, 0x6e, 0x77, 0x69, 0x6c,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6b, 0x61, 0x6e, 0x77, 0x69, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6b, 0x61, 0x6e, 0x77, 0x69, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6b, 0x61, 0x6e, 0x77, 0x69, 0x6c, 0x49, 0x73, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6b, 0x61, 0x6e,
	0x77, 0x69, 0x6c, 0x49, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6b, 0x61, 0x6e, 0x63, 0x61, 0x49, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6b,
	0x61, 0x6e, 0x63, 0x61, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x61, 0x6e, 0x63, 0x61, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x61, 0x6e, 0x63, 0x61,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6b, 0x61, 0x6e, 0x63, 0x61, 0x49, 0x73, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6b, 0x61,
	0x6e, 0x63, 0x61, 0x49, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x46, 0x65, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x50, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x4c, 0x61, 0x74, 0x65, 0x72, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x61, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4e, 0x61, 0x73, 0x61, 0x62, 0x61, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74,
	0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x25, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x26, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc6,
	0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x61, 0x6e, 0x63, 0x61,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x61, 0x6e, 0x63, 0x61, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x61, 0x6e, 0x77, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x61, 0x6e, 0x77, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xc8, 0x01, 0x0a, 0x16, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x72, 0x69, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x26, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0x71, 0x0a, 0x0b, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x9c, 0x02, 0x0a, 0x14, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x64,
	0x61, 0x74, 0x61, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10,
	0x64, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x43, 0x0a, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x5e, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x73, 0x0a, 0x13, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x83, 0x02, 0x0a, 0x11, 0x44,
	0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x61, 0x6e, 0x77,
	0x69, 0x6c, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6b, 0x61, 0x6e, 0x77,
	0x69, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x61, 0x6e, 0x63, 0x61, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6b, 0x61, 0x6e, 0x63, 0x61, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x80, 0x01, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x05, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x22, 0xbc, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x61, 0x6e, 0x77, 0x69, 0x6c,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6b, 0x61, 0x6e, 0x77, 0x69, 0x6c,
	0x49, 0x64, 0x22, 0xeb, 0x01, 0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x2e, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x12, 0x2e, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x22, 0xc0, 0x01, 0x0a, 0x15, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xc7, 0x01, 0x0a, 0x19, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf5, 0x04,
	0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x72, 0x65, 0x73, 0x65, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x64, 0x4f, 0x66, 0x66, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x69, 0x64, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x53,
	0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x61, 0x6e,
	0x77, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x61, 0x6e,
	0x77, 0x69, 0x6c, 0x49, 0x64, 0x32, 0xb1, 0x14, 0x0a, 0x10, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x72, 0x69, 0x6e, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x72,
	0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x73, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4d, 0x0a, 0x18, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b,
	0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0a, 0x44, 0x61, 0x69, 0x6c, 0x79,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x4b, 0x61, 0x6e, 0x63, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x4b, 0x61, 0x6e, 0x77, 0x69, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x17, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x19, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x12, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x12, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x52, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x54, 0x6f, 0x70, 0x52, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x6f, 0x70, 0x52, 0x61, 0x74, 0x65, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66,
	0x66, 0x69, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61,
	0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x51, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x76, 0x61, 0x6d, 0x62, 0x69, 0x6c,
	0x69, 0x6e, 0x2f, 0x62, 0x6f, 0x64, 0x2d, 0x61, 0x6d, 0x62, 0x69, 0x6c, 0x69, 0x6e, 0x2d, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_dashboard_proto_rawDescOnce sync.Once
	file_proto_dashboard_proto_rawDescData = file_proto_dashboard_proto_rawDesc
)

func file_proto_dashboard_proto_rawDescGZIP() []byte {
	file_proto_dashboard_proto_rawDescOnce.Do(func() {
		file_proto_dashboard_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_dashboard_proto_rawDescData)
	})
	return file_proto_dashboard_proto_rawDescData
}

var file_proto_dashboard_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_proto_dashboard_proto_goTypes = []interface{}{
	(*RoleCreateRequest)(nil),         // 0: proto.RoleCreateRequest
	(*DataMenu)(nil),                  // 1: proto.DataMenu
	(*RoleRequest)(nil),               // 2: proto.RoleRequest
	(*TopRatedAgentsMessage)(nil),     // 3: proto.TopRatedAgentsMessage
	(*PromoImageUpdateRequest)(nil),   // 4: proto.PromoImageUpdateRequest
	(*PromoListRequest)(nil),          // 5: proto.PromoListRequest
	(*PromoRequest)(nil),              // 6: proto.PromoRequest
	(*PromoCreateRequest)(nil),        // 7: proto.PromoCreateRequest
	(*MasterConfigRequest)(nil),       // 8: proto.MasterConfigRequest
	(*DownloadRequest)(nil),           // 9: proto.DownloadRequest
	(*DownloadResponse)(nil),          // 10: proto.DownloadResponse
	(*DataDownload)(nil),              // 11: proto.DataDownload
	(*GetFilterRequest)(nil),          // 12: proto.GetFilterRequest
	(*HistoryActivityRequest)(nil),    // 13: proto.HistoryActivityRequest
	(*UploadPhotoRequest)(nil),        // 14: proto.UploadPhotoRequest
	(*CreateAdminBrinsRequest)(nil),   // 15: proto.CreateAdminBrinsRequest
	(*BaseRequest)(nil),               // 16: proto.BaseRequest
	(*MasterConfigResponse)(nil),      // 17: proto.MasterConfigResponse
	(*DataMasterConfig)(nil),          // 18: proto.DataMasterConfig
	(*DailySummaryRequest)(nil),       // 19: proto.DailySummaryRequest
	(*DailyTableRequest)(nil),         // 20: proto.DailyTableRequest
	(*AdminRequest)(nil),              // 21: proto.AdminRequest
	(*AdminListRequest)(nil),          // 22: proto.AdminListRequest
	(*AdminResponse)(nil),             // 23: proto.AdminResponse
	(*DashboardBaseResponse)(nil),     // 24: proto.DashboardBaseResponse
	(*DashboardBaseListResponse)(nil), // 25: proto.DashboardBaseListResponse
	(*DataAdmin)(nil),                 // 26: proto.DataAdmin
	(*structpb.Struct)(nil),           // 27: google.protobuf.Struct
	(*structpb.ListValue)(nil),        // 28: google.protobuf.ListValue
}
var file_proto_dashboard_proto_depIdxs = []int32{
	1,  // 0: proto.RoleCreateRequest.listRoleMenu:type_name -> proto.DataMenu
	18, // 1: proto.MasterConfigRequest.masterConfig:type_name -> proto.DataMasterConfig
	11, // 2: proto.DownloadResponse.dataDownload:type_name -> proto.DataDownload
	18, // 3: proto.MasterConfigResponse.dataMasterConfig:type_name -> proto.DataMasterConfig
	18, // 4: proto.MasterConfigResponse.listMasterConfig:type_name -> proto.DataMasterConfig
	26, // 5: proto.AdminRequest.admin:type_name -> proto.DataAdmin
	26, // 6: proto.AdminResponse.dataAdmin:type_name -> proto.DataAdmin
	26, // 7: proto.AdminResponse.listAdmin:type_name -> proto.DataAdmin
	27, // 8: proto.DashboardBaseResponse.data:type_name -> google.protobuf.Struct
	28, // 9: proto.DashboardBaseListResponse.data:type_name -> google.protobuf.ListValue
	8,  // 10: proto.DashboardService.GetMasterConfig:input_type -> proto.MasterConfigRequest
	15, // 11: proto.DashboardService.CreateAdminBrins:input_type -> proto.CreateAdminBrinsRequest
	22, // 12: proto.DashboardService.GetAdmins:input_type -> proto.AdminListRequest
	21, // 13: proto.DashboardService.GetAdmin:input_type -> proto.AdminRequest
	21, // 14: proto.DashboardService.CreateAdmin:input_type -> proto.AdminRequest
	21, // 15: proto.DashboardService.UpdateAdmin:input_type -> proto.AdminRequest
	21, // 16: proto.DashboardService.DeleteAdmin:input_type -> proto.AdminRequest
	21, // 17: proto.DashboardService.CheckEmailAdmin:input_type -> proto.AdminRequest
	21, // 18: proto.DashboardService.CheckPersonalNumberAdmin:input_type -> proto.AdminRequest
	14, // 19: proto.DashboardService.UploadPhotoAdmin:input_type -> proto.UploadPhotoRequest
	21, // 20: proto.DashboardService.RemovePhotoAdmin:input_type -> proto.AdminRequest
	19, // 21: proto.DashboardService.Summary:input_type -> proto.DailySummaryRequest
	20, // 22: proto.DashboardService.DailyTable:input_type -> proto.DailyTableRequest
	12, // 23: proto.DashboardService.GetKancaFilter:input_type -> proto.GetFilterRequest
	12, // 24: proto.DashboardService.GetKanwilFilter:input_type -> proto.GetFilterRequest
	12, // 25: proto.DashboardService.GetAgentFilter:input_type -> proto.GetFilterRequest
	9,  // 26: proto.DashboardService.Download:input_type -> proto.DownloadRequest
	9,  // 27: proto.DashboardService.DownloadReportExecutive:input_type -> proto.DownloadRequest
	9,  // 28: proto.DashboardService.DownloadReportOperational:input_type -> proto.DownloadRequest
	9,  // 29: proto.DashboardService.ListMenu:input_type -> proto.DownloadRequest
	5,  // 30: proto.DashboardService.GetListPromo:input_type -> proto.PromoListRequest
	6,  // 31: proto.DashboardService.GetDetailPromo:input_type -> proto.PromoRequest
	7,  // 32: proto.DashboardService.CreatePromo:input_type -> proto.PromoCreateRequest
	7,  // 33: proto.DashboardService.UpdatePromo:input_type -> proto.PromoCreateRequest
	4,  // 34: proto.DashboardService.ChangePicturePromo:input_type -> proto.PromoImageUpdateRequest
	6,  // 35: proto.DashboardService.DeletePromo:input_type -> proto.PromoRequest
	3,  // 36: proto.DashboardService.TopRatedAgents:input_type -> proto.TopRatedAgentsMessage
	2,  // 37: proto.DashboardService.GetListOfficeRole:input_type -> proto.RoleRequest
	2,  // 38: proto.DashboardService.GetListRole:input_type -> proto.RoleRequest
	2,  // 39: proto.DashboardService.GetListRoleStatic:input_type -> proto.RoleRequest
	2,  // 40: proto.DashboardService.GetDetailRole:input_type -> proto.RoleRequest
	0,  // 41: proto.DashboardService.CreateRole:input_type -> proto.RoleCreateRequest
	0,  // 42: proto.DashboardService.UpdateRole:input_type -> proto.RoleCreateRequest
	0,  // 43: proto.DashboardService.DeleteRole:input_type -> proto.RoleCreateRequest
	13, // 44: proto.DashboardService.GetHistoryActivity:input_type -> proto.HistoryActivityRequest
	9,  // 45: proto.DashboardService.GetStatistics:input_type -> proto.DownloadRequest
	17, // 46: proto.DashboardService.GetMasterConfig:output_type -> proto.MasterConfigResponse
	24, // 47: proto.DashboardService.CreateAdminBrins:output_type -> proto.DashboardBaseResponse
	24, // 48: proto.DashboardService.GetAdmins:output_type -> proto.DashboardBaseResponse
	23, // 49: proto.DashboardService.GetAdmin:output_type -> proto.AdminResponse
	24, // 50: proto.DashboardService.CreateAdmin:output_type -> proto.DashboardBaseResponse
	24, // 51: proto.DashboardService.UpdateAdmin:output_type -> proto.DashboardBaseResponse
	24, // 52: proto.DashboardService.DeleteAdmin:output_type -> proto.DashboardBaseResponse
	24, // 53: proto.DashboardService.CheckEmailAdmin:output_type -> proto.DashboardBaseResponse
	24, // 54: proto.DashboardService.CheckPersonalNumberAdmin:output_type -> proto.DashboardBaseResponse
	24, // 55: proto.DashboardService.UploadPhotoAdmin:output_type -> proto.DashboardBaseResponse
	24, // 56: proto.DashboardService.RemovePhotoAdmin:output_type -> proto.DashboardBaseResponse
	24, // 57: proto.DashboardService.Summary:output_type -> proto.DashboardBaseResponse
	24, // 58: proto.DashboardService.DailyTable:output_type -> proto.DashboardBaseResponse
	25, // 59: proto.DashboardService.GetKancaFilter:output_type -> proto.DashboardBaseListResponse
	25, // 60: proto.DashboardService.GetKanwilFilter:output_type -> proto.DashboardBaseListResponse
	25, // 61: proto.DashboardService.GetAgentFilter:output_type -> proto.DashboardBaseListResponse
	24, // 62: proto.DashboardService.Download:output_type -> proto.DashboardBaseResponse
	10, // 63: proto.DashboardService.DownloadReportExecutive:output_type -> proto.DownloadResponse
	10, // 64: proto.DashboardService.DownloadReportOperational:output_type -> proto.DownloadResponse
	24, // 65: proto.DashboardService.ListMenu:output_type -> proto.DashboardBaseResponse
	24, // 66: proto.DashboardService.GetListPromo:output_type -> proto.DashboardBaseResponse
	24, // 67: proto.DashboardService.GetDetailPromo:output_type -> proto.DashboardBaseResponse
	24, // 68: proto.DashboardService.CreatePromo:output_type -> proto.DashboardBaseResponse
	24, // 69: proto.DashboardService.UpdatePromo:output_type -> proto.DashboardBaseResponse
	24, // 70: proto.DashboardService.ChangePicturePromo:output_type -> proto.DashboardBaseResponse
	24, // 71: proto.DashboardService.DeletePromo:output_type -> proto.DashboardBaseResponse
	24, // 72: proto.DashboardService.TopRatedAgents:output_type -> proto.DashboardBaseResponse
	25, // 73: proto.DashboardService.GetListOfficeRole:output_type -> proto.DashboardBaseListResponse
	24, // 74: proto.DashboardService.GetListRole:output_type -> proto.DashboardBaseResponse
	25, // 75: proto.DashboardService.GetListRoleStatic:output_type -> proto.DashboardBaseListResponse
	24, // 76: proto.DashboardService.GetDetailRole:output_type -> proto.DashboardBaseResponse
	24, // 77: proto.DashboardService.CreateRole:output_type -> proto.DashboardBaseResponse
	24, // 78: proto.DashboardService.UpdateRole:output_type -> proto.DashboardBaseResponse
	24, // 79: proto.DashboardService.DeleteRole:output_type -> proto.DashboardBaseResponse
	24, // 80: proto.DashboardService.GetHistoryActivity:output_type -> proto.DashboardBaseResponse
	24, // 81: proto.DashboardService.GetStatistics:output_type -> proto.DashboardBaseResponse
	46, // [46:82] is the sub-list for method output_type
	10, // [10:46] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_dashboard_proto_init() }
func file_proto_dashboard_proto_init() {
	if File_proto_dashboard_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_dashboard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopRatedAgentsMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromoImageUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromoListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromoCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataDownload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadPhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAdminBrinsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMasterConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailySummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashboardBaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashboardBaseListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dashboard_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_dashboard_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_dashboard_proto_goTypes,
		DependencyIndexes: file_proto_dashboard_proto_depIdxs,
		MessageInfos:      file_proto_dashboard_proto_msgTypes,
	}.Build()
	File_proto_dashboard_proto = out.File
	file_proto_dashboard_proto_rawDesc = nil
	file_proto_dashboard_proto_goTypes = nil
	file_proto_dashboard_proto_depIdxs = nil
}
