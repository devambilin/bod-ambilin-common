syntax = "proto3";

package proto;
option go_package = "github.com/devambilin/bod-ambilin-common/proto";

message BaseRequest {
  string txType               = 1;
  map<string, string> headers = 2;
  bytes params = 3;
  map<string, string> BodyString = 4;
}

message BaseResponse {
  bytes response = 1;
  map<string, string> headers = 2;
  int32 httpStatus = 3;
}

// ------------------------------------Start Auth Service-------------------------------------
service AuthService {
  //for admin
  rpc AdminValidateSession(SessionRequest) returns (SessionResponse){}
  rpc AdminLogin(BaseRequest) returns (BaseResponse){}
  rpc AdminForgotPassword(BaseRequest) returns (BaseResponse){}
  rpc AdminResetPassword(BaseRequest) returns (BaseResponse){}
  rpc AdminResetPasswordValidate(BaseRequest) returns (BaseResponse){}
  rpc AdminChangePassword(BaseRequest) returns (BaseResponse){}
  rpc AdminLogout(BaseRequest) returns (BaseResponse){}
  //for customer
  rpc CustomerValidateSession(SessionRequest) returns (SessionResponse){}
  rpc CustomerLogin(BaseRequest) returns (BaseResponse){}
  rpc CustomerCreatePin(BaseRequest) returns (BaseResponse){}
  rpc CustomerVerifyPin(BaseRequest) returns (BaseResponse){}
  rpc CustomerChangePin(BaseRequest) returns (BaseResponse){}
  rpc CustomerForgotPin(BaseRequest) returns (BaseResponse){}
  rpc CustomerLogout(BaseRequest) returns (BaseResponse){}
  //for agent
  rpc AgentValidateSession(SessionRequest) returns (SessionResponse){}
  rpc AgentLogin(BaseRequest) returns (BaseResponse){}
  rpc AgentVerifyOtpLogin(BaseRequest) returns (BaseResponse){}
  rpc AgentLogout(BaseRequest) returns (BaseResponse){}
  //for partner
  rpc PartnerLogin(BaseRequest) returns (BaseResponse){}
}

message SessionRequest {
  string token = 1;
  string signature = 2;
}

message SessionResponse {
  int32 status = 1;
  string message = 2;
  SessionData data = 3;
}

message SessionData {
  string username = 1;
  string name = 2;
  string type = 3;
  string userId = 4;
  string role = 5;
}
// ------------------------------------End Auth Service-------------------------------------

// ------------------------------------Start User Service-------------------------------------
service UserService {
  //for clients grpc
  rpc GetUsers(UserRequest) returns(UserResponse){}
  rpc GetUser(UserRequest) returns(UserResponse){}
  rpc CreateUser(UserRequest) returns(UserResponse){}
  rpc UpdateUser(UserRequest) returns(UserResponse){}
  rpc DeleteUser(UserRequest) returns(UserResponse){}
  //for admin
  rpc AdminGetUserType(BaseRequest) returns (BaseResponse){}
  rpc AdminGetListCustomerPersonal(BaseRequest) returns (BaseResponse){}
  rpc AdminGetListCustomerPartnership(BaseRequest) returns (BaseResponse){}
  rpc AdminCreateCustomer(BaseRequest) returns (BaseResponse){}
  rpc AdminValidateCustomerPhone(BaseRequest) returns (BaseResponse){}
  rpc AdminGetDetailCustomer(BaseRequest) returns (BaseResponse){}
  rpc AdminUpdateCustomer(BaseRequest) returns (BaseResponse){}
  rpc AdminDeleteCustomer(BaseRequest) returns (BaseResponse){}
  rpc AdminGetListPartner(BaseRequest) returns (BaseResponse){}
  rpc AdminGetDataMasterPartner(BaseRequest) returns (BaseResponse){}
  rpc AdminGetDetailPartner(BaseRequest) returns (BaseResponse){}
  rpc AdminCreatePartner(BaseRequest) returns (BaseResponse){}
  rpc AdminUpdatePartner(BaseRequest) returns (BaseResponse){}
  rpc AdminDeletePartner(BaseRequest) returns (BaseResponse){}
  //for customer
  rpc CustomerGetDashboard(BaseRequest) returns (BaseResponse){}
  rpc CustomerGetPromo(BaseRequest) returns (BaseResponse){}
  rpc CustomerGetDetail(BaseRequest) returns (BaseResponse){}
  rpc CustomerGetCustomerHistory(BaseRequest) returns (BaseResponse){}
  rpc CustomerUpdate(BaseRequest) returns (BaseResponse){}
  rpc CustomerFavouriteAgent(BaseRequest) returns (BaseResponse){}
  rpc CustomerUploadPhoto(BaseRequest) returns (BaseResponse){}
  rpc CustomerDeletePhoto(BaseRequest) returns (BaseResponse){}
  rpc CustomerGetNotification(BaseRequest) returns (BaseResponse){}
  rpc CustomerReadNotification(BaseRequest) returns (BaseResponse){}
  rpc CustomerDeleteNotification(BaseRequest) returns (BaseResponse){}
}

message UserRequest {
  string requestId = 1;
  string requestByService = 2;
  DataUser user = 3;
}

message UserResponse {
  int32 status = 1;
  string message = 2;
  string requestId = 3;
  string requestByService = 4;
  DataUser dataUser = 5;
  repeated DataUser listUser = 6;
}

message DataUser {
  int64 created = 1;
  int64 updated = 2;
  int64 removed = 3;
  string createdBy = 4;
  string updatedBy = 5;
  string id = 6;
  string name = 7;
  string address = 8;
  string email = 9;
  string phone = 10;
  string ektp = 11;
  string accountNumber = 12;
  string photoUrl = 13;
  int32 status = 14;
  int32 registrationCode = 15;
  string accessId = 16;
  string agentId = 17;
  string clientPin = 18;
  bool firstLogin = 19;
  string userType = 20;
  string guarantorName = 21;
  string identityNumber = 22;
  string feePickup = 23;
  int32 kanwilId = 24;
  int32 kancaId = 25;
  string partnerId = 26;
  string kanwilName = 27;
  string kancaName = 28;
}
// ------------------------------------End User Service-------------------------------------

// ------------------------------------Start Order Service-------------------------------------
service OrderService {
  //for clients grpc
  rpc GetOrders(OrderRequest) returns(OrderResponse){}
  rpc GetOrder(OrderRequest) returns(OrderResponse){}
  rpc CreateOrder(OrderRequest) returns(OrderResponse){}
  rpc UpdateOrder(OrderRequest) returns(OrderResponse){}
  rpc DeleteOrder(OrderRequest) returns(OrderResponse){}
  //for customer
  rpc CustomerSubmitOrder(BaseRequest) returns (BaseResponse){}
  rpc CustomerDetailOrder(BaseRequest) returns (BaseResponse){}
  rpc CustomerConfirmOrder(BaseRequest) returns (BaseResponse){}
  rpc CustomerGetListOrderProcess(BaseRequest) returns (BaseResponse){}
  rpc CustomerChangeStatus(BaseRequest) returns (BaseResponse){}
  rpc CustomerCancelOrder(BaseRequest) returns (BaseResponse){}
  rpc CustomerCheckOrder(BaseRequest) returns (BaseResponse){}
  //for agent
  rpc AgentGetListProcessAndHistoryOrder(BaseRequest) returns (BaseResponse){}
  rpc AgentAcceptOrder(BaseRequest) returns (BaseResponse){}
  rpc AgentPickupOrder(BaseRequest) returns (BaseResponse){}
  rpc AgentGoingOrder(BaseRequest) returns (BaseResponse){}
  rpc AgentConfirmCodeOrder(BaseRequest) returns (BaseResponse){}
  rpc AgentUpdateAmountOrder(BaseRequest) returns (BaseResponse){}
  rpc AgentGetFeeTransactionOrder(BaseRequest) returns (BaseResponse){}
}

message OrderRequest {
  string requestId = 1;
  string requestByService = 2;
  DataUser user = 3;
}

message OrderResponse {
  int32 status = 1;
  string message = 2;
  string requestId = 3;
  string requestByService = 4;
  DataOrder dataOrder = 5;
  repeated DataOrder listOrder = 6;
}

message DataOrder {
  int64 created = 1;
  int64 updated = 2;
  int64 removed = 3;
  string createdBy = 4;
  string updatedBy = 5;
  string id = 6;
  string userId = 7;
  string agentId = 8;
  float depositAmount = 9;
  float shippingFee = 10;
  int32 shippingMethod = 11;
  int32 orderStatusCustomer = 12;
  string orderType = 13;
  int32 progressPickup = 14;
  string orderLater = 15;
  string estimatedArrival = 16;
  string estimatedPickup = 17;
  string customerPlace = 18;
  string customerAddress = 19;
  float customerLatitude = 20;
  float customerLongitude = 21;
  float agentLatitude = 22;
  float agentLongitude = 23;
  int32 orderStatusAgent = 24;
  float costOrder = 25;
  bool amountStatus = 26;
  int64 expiredTime = 27;
  int64 completedTime = 28;
  float distance = 29;
  bool confirmButton = 30;
  bool confirmButtonAgent = 31;
  bool amountStatusInvalid = 32;
  string orderCode = 33;
  bool isCountdown = 34;
  string locationDescription = 35;
  int64 orderFinish = 36;
  string expiredTimeExtend = 37;
  string urlInvoice = 38;
}

// ------------------------------------End Order Service-------------------------------------

