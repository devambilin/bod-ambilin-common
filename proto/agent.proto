syntax = "proto3";

package proto;
option go_package = "github.com/devambilin/bod-ambilin-common/proto";
import "proto/user.proto";

service AgentService {
    //for clients grpc
    rpc GetAgents(AgentRequest) returns(AgentResponse){}
    rpc GetAgent(AgentRequest) returns(AgentResponse){}
    rpc CreateAgent(AgentRequest) returns(AgentResponse){}
    rpc UpdateAgent(AgentRequest) returns(AgentResponse){}
    rpc DeleteAgent(AgentRequest) returns(AgentResponse){}
    //for admin
//    rpc AdminGetListAgent(BaseRequest) returns (BaseResponse){}
//    rpc AdminCreateAgent(BaseRequest) returns (BaseResponse){}
//    rpc AdminValidateMidAgent(BaseRequest) returns (BaseResponse){}
//    rpc AdminGetDetailAgent(BaseRequest) returns (BaseResponse){}
//    rpc AdminUpdateAgent(BaseRequest) returns (BaseResponse){}
//    rpc AdminDeleteAgent(BaseRequest) returns (BaseResponse){}
//    //for agent
    rpc AgentDashboard(AgentGlobalRequest) returns (AgentDashboardResponse){}
    rpc AgentDetail(AgentGlobalRequest) returns (AgentGlobalResponse){}
    rpc AgentHistory(AgentGlobalRequest) returns (AgentHistoryResponse){}
    rpc AgentListNotification(AgentGlobalRequest) returns (AgentNotificationResponse){}
    rpc AgentDeleteNotification(AgentGlobalRequest) returns (AgentGlobalResponse){}
    rpc AgentReadNotification(AgentGlobalRequest) returns (AgentGlobalResponse){}
    rpc AgentUploadPhoto(AgentPhotoRequest) returns (AgentGlobalResponse){}
    rpc AgentDeletePhoto(AgentPhotoRequest) returns (AgentGlobalResponse){}
    rpc AgentCheckLimitPickup(AgentGlobalRequest) returns (AgentGlobalResponse){}
    rpc AgentUpdateData(AgentRequest) returns (AgentResponse){}
    rpc AgentChangeStatus(AgentRequest) returns (AgentResponse){}
    rpc AgentSetLimitPickup(AgentRequest) returns (AgentResponse){}
    rpc AgentGetListCustomer(AgentGlobalRequest) returns (AgentGetListCustomerResponse){}
    rpc AgentGetLimitPickup(AgentGlobalRequest) returns (AgentResponse){}
//    rpc AgentGetPab(BaseRequest) returns (BaseResponse){}
    rpc AgentSetupLocation(AgentSetupLocationRequest) returns (AgentResponse){}
    rpc AgentListVehicle(AgentVehicleRequest) returns (AgentVehicleResponse){}
    rpc AgentSubmitVehicle(AgentVehicleRequest) returns (AgentResponse){}
//    //for customer
    rpc CustomerDetailAgent(AgentDetailCustomer) returns (AgentResponse){}
  }

  message AgentDetailCustomer {
    string requestId = 1;
    string requestByService = 2;
    string agentId = 3;
    int64 nominalSetoran = 4;
    float nasabahLat = 5;
    float nasabahLong = 6;
  }

  message AgentVehicleRequest {
    string requestId = 1;
    string requestByService = 2;
    string id = 3;
  }
  message AgentVehicleResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    repeated DataVehicle dataVehicles = 4;
  }

  message AgentSetupLocationRequest {
    string requestId = 1;
    string requestByService = 2;
    string id = 3;
    string address = 4;
    string addressDetail = 5;
    float longitude = 6;
    float latitude = 7;
  }

  message AgentGetListCustomerResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    repeated DataUser dataUsers = 4;
  }

  message AgentGlobalRequest {
    string requestId = 1;
    string requestByService = 2;
    string id = 3;
  }

  message AgentGlobalResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    DataAgent dataAgent = 4;
  }

  message AgentDashboardResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    DataAgent dataAgent = 4;
    AgentDashboardSummaryToday summaryToday = 5;
    AgentDashboardOrderProcess orderProcess = 6;
    AgentDashboardNotification notification = 7;
  }

  message AgentDashboardSummaryToday {
    int64 feeDiterima = 1;
    int64 limitPickupCurrent = 2;
    int64 limitPickupMax = 3;
    int64 nominalPickup = 4;
    int64 orderProcess = 5;
    int64 orderFinished = 6;
  }

  message AgentDashboardNotification {
    int64 id = 1;
    int32 isRead = 2;
    string title = 3;
    string message = 4;
    int64 createdTime = 5;
    int64 createdTimeUnix = 6;
  }

  message AgentDashboardOrderProcess {
    string nasabahTransId = 1;
    string nasabahTimePickup = 2;
    float nasabahPickupValue = 3;
    string nasabahPhone = 4;
    string nasabahName = 5;
    float nasabahLongitude = 6;
    float nasabahLatitude = 7;
    string nasabahAddress = 8;
    string nasabahPhotoUrl = 9;
    int32 statusOrderNasabah = 10;
    int32 statusOrderAgent = 11;
    string orderType = 12;
    int64 expiredTime = 13;
    int64 expiredSecond = 14;
    int64 expiredSecondStatic = 15;
  }

  message AgentHistoryResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    string transactionId = 5;
    string date = 6;
    string detail = 7;
    float nominal = 8;
    int32 statusAgent = 9;
  }

  message AgentNotificationResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    AgentDashboardNotification dataNotification = 5;
  }

  message AgentPhotoRequest {
    string requestId = 1;
    string requestByService = 2;
    string id = 3;
    string photoUrl = 4;
  }
  
  message AgentRequest {
    string requestId = 1;
    string requestByService = 2;
    DataAgent agent = 3;
  }
  
  message AgentResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    string requestByService = 4;
    DataAgent dataAgent = 5;
    repeated DataAgent listAgent = 6;
  }
  
  message DataAgent {
    int64 created = 1;
    int64 updated = 2;
    int64 removed = 3;
    string createdBy = 4;
    string updatedBy = 5;
    string id = 6;
    string ktp = 7;
    string fullName = 8;
    string religion = 9;
    string gender = 10;
    string dateOfBirth = 11;
    string placeOfBirth = 12;
    string address = 13;
    int32 zipCode = 14;
    string addressDomicile = 15;
    int32 zipCodeDomicile = 16;
    string phone = 17;
    string email = 18;
    float longitude = 19;
    float latitude = 20;
    string image = 21;
    bool notification = 22;
    bool isOnline = 23;
    string costInstant = 24;
    int32 status = 25;
    string costLater = 26;
    string limitPickup = 27;
    string mid = 28;
    string photoUrl = 29;
    string accessId = 30;
    int32 kancaId = 31;
    int32 pabId = 32;
    bool firstLogin = 33;
    int64 lastUpdateDataBrilink = 34;
    string branchCode = 35;
    string branchName = 36;
    string regionCode = 37;
    string regionName = 38;
    string merchantCode = 39;
    string vehicleCode = 40;
    string numberPolice = 41;
    bool setupLocation = 42;
  }

  message DataVehicle {
    string vehicleCode = 1;
    string vehicleName = 2;
  }
