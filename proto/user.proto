syntax = "proto3";

package proto;
option go_package = "github.com/devambilin/bod-ambilin-common/proto";
import "google/protobuf/struct.proto";

service UserService {
    //for clients grpc
    rpc GetUsers(UserRequest) returns(UserResponse){}
    rpc GetUser(UserRequest) returns(UserResponse){}
    rpc CreateUser(UserRequest) returns(UserResponse){}
    rpc UpdateUser(UserRequest) returns(UserResponse){}
    rpc DeleteUser(UserRequest) returns(UserResponse){}
    //for admin
    rpc AdminGetUserType(UserGlobalRequest) returns (UserBaseResponse){}
    rpc AdminGetListCustomerPersonal(UserRequest) returns (UserBaseResponse){}
    rpc AdminGetListCustomerPartnership(UserRequest) returns (UserBaseResponse){}
    rpc AdminCreateCustomer(UserRequest) returns (UserBaseResponse){}
    rpc AdminValidateCustomerPhone(UserRequest) returns (UserBaseResponse){}
    rpc AdminGetDetailCustomer(UserRequest) returns (UserBaseResponse){}
    rpc AdminUpdateCustomer(UserRequest) returns (UserBaseResponse){}
    rpc AdminDeleteCustomer(UserRequest) returns (UserBaseResponse){}
    rpc AdminGetListPartner(UserRequest) returns (UserBaseResponse){}
    rpc AdminGetDataMasterPartner(UserRequest) returns (UserBaseResponse){}
    rpc AdminGetDetailPartner(UserRequest) returns (UserBaseResponse){}
    rpc AdminCreatePartner(UserRequest) returns (UserBaseResponse){}
    rpc AdminUpdatePartner(UserRequest) returns (UserBaseResponse){}
    rpc AdminDeletePartner(UserRequest) returns (UserBaseResponse){}
//    //for customer
    rpc CustomerGetDashboard(UserRequest) returns (UserBaseResponse){}
    rpc CustomerGetPromo(UserRequest) returns (UserBaseResponse){}
    rpc CustomerGetDetail(UserRequest) returns (UserBaseResponse){}
    rpc CustomerGetCustomerHistory(UserRequest) returns (UserBaseResponse){}
    rpc CustomerUpdate(UserRequest) returns (UserBaseResponse){}
    rpc CustomerFavouriteAgent(UserRequest) returns (UserBaseResponse){}
    rpc CustomerUpdatePhoto(UserRequest) returns (UserBaseResponse){}
    rpc CustomerGetNotification(UserRequest) returns (UserBaseResponse){}
    rpc CustomerReadNotification(UserRequest) returns (UserBaseResponse){}
    rpc CustomerDeleteNotification(UserRequest) returns (UserBaseResponse){}
//    //for agent
    rpc AgentRegisterCustomer(UserRequest) returns (UserBaseResponse){}
    rpc AgentVerifyOtpRegisterCustomer(UserRequest) returns (UserBaseResponse){}
    rpc AgentFindUserType(UserRequest) returns (UserBaseResponse){}
  }

  message UserGlobalRequest {
    string requestId = 1;
    string requestByService = 2;
    string id = 3;
    UserBaseFilterRequest filter = 4;
  }

  message UserBaseResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    google.protobuf.Struct data = 5;
  }

  message UserBaseFilterRequest {
    int32 page = 1;
    int32 limit = 2;
    string keyword = 3;
    google.protobuf.Struct otherParam = 4;
  }
  
  message UserRequest {
    string requestId = 1;
    string requestByService = 2;
    DataUser user = 3;
	  DataUserPartnership userPartnership = 4;
    UserBaseFilterRequest filter = 5;
  }
  
  message UserResponse {
    int32 status = 1;
    string message = 2;
    string requestId = 3;
    string requestByService = 4;
    DataUser dataUser = 5;
    repeated DataUser listUser = 6;
	  DataUserPartnership dataUserPartnership = 7;
	  repeated DataUserPartnership listUserPartnership = 8;
  }
  
  message DataUser {
    int64 created = 1;
    int64 updated = 2;
    int64 removed = 3;
    string createdBy = 4;
    string updatedBy = 5;
    string id = 6;
    string name = 7;
    string address = 8;
    string email = 9;
    string phone = 10;
    string ektp = 11;
    string accountNumber = 12;
    string photoUrl = 13;
    int32 status = 14;
    int32 registrationCode = 15;
    string accessId = 16;
    string agentId = 17;
    string clientPin = 18;
    bool firstLogin = 19;
    string userType = 20;
    string guarantorName = 21;
    string identityNumber = 22;
    string feePickup = 23;
    int32 kanwilId = 24;
    int32 kancaId = 25;
    string partnerId = 26;
    string kanwilName = 27;
    string kancaName = 28;
  }
  
  message DataUserPartnership {
	  int64 created = 1;
    int64 updated = 2;
    int64 removed = 3;
    string createdBy = 4;
    string updatedBy = 5;
    string id = 6;
	  string userId = 7;
	  string agentId = 8;
  }